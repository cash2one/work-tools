// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game_guild.proto

#ifndef PROTOBUF_game_5fguild_2eproto__INCLUDED
#define PROTOBUF_game_5fguild_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "game_common.pb.h"
// @@protoc_insertion_point(includes)

namespace protocols {
namespace common {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_game_5fguild_2eproto();
void protobuf_AssignDesc_game_5fguild_2eproto();
void protobuf_ShutdownFile_game_5fguild_2eproto();

class GuildInfo;
class GuildMemberInfo;
class GuildDetail;
class GuildInviteInfo;
class GuildApplyInfo;
class CreateGuildRequest;
class CreateGuildResponse;
class DeleteGuildRequest;
class DeleteGuildResponse;
class GetGuildListRequest;
class GetGuildListResponse;
class GetGuildDetailRequest;
class GetGuildDetailResponse;
class GetGuildMemberListRequest;
class GetGuildMemberListResponse;
class ApplyJoinGuildRequest;
class ApplyJoinGuildResponse;
class AnswerJoinGuildRequest;
class AnswerJoinGuildResponse;
class AnswerJoinGuildNotify;
class InviteJoinGuildRequest;
class InviteJoinGuildResponse;
class InviteJoinGuildNotify;
class GetGuildInviteListRequest;
class GetGuildInviteListResponse;
class GetGuildApplyListRequest;
class GetGuildApplyListResponse;
class GuildMemberNotify;
class GuildTitleNotify;
class ReplyJoinGuildRequest;
class ReplyJoinGuildResponse;
class DeleteGuildMemberRequest;
class DeleteGuildMemberResponse;
class DeleteGuildMemberNotify;
class SetGuildMemberTitleRequest;
class SetGuildMemberTitleResponse;
class SetGuildNoticeRequest;
class SetGuildNoticeResponse;
class EnterGuildMapRequest;
class EnterGuildMapResponse;
class LeaveGuildMapRequest;
class LeaveGuildMapResponse;

enum GuildMemberStatus {
  MEMBER_STATUS_APPLY = 1,
  MEMBER_STATUS_INVITE = 2,
  MEMBER_STATUS_ACCEPTED = 3,
  MEMBER_STATUS_DELETED = 4
};
bool GuildMemberStatus_IsValid(int value);
const GuildMemberStatus GuildMemberStatus_MIN = MEMBER_STATUS_APPLY;
const GuildMemberStatus GuildMemberStatus_MAX = MEMBER_STATUS_DELETED;
const int GuildMemberStatus_ARRAYSIZE = GuildMemberStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* GuildMemberStatus_descriptor();
inline const ::std::string& GuildMemberStatus_Name(GuildMemberStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    GuildMemberStatus_descriptor(), value);
}
inline bool GuildMemberStatus_Parse(
    const ::std::string& name, GuildMemberStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GuildMemberStatus>(
    GuildMemberStatus_descriptor(), name, value);
}
enum GuildMemberTitle {
  MEMBER_TITLE_NORMAL = 0,
  MEMBER_TITLE_ELITE = 1,
  MEMBER_TITLE_ELDER = 2,
  MEMBER_TITLE_VICE_LEADER = 3,
  MEMBER_TITLE_LEADER = 4
};
bool GuildMemberTitle_IsValid(int value);
const GuildMemberTitle GuildMemberTitle_MIN = MEMBER_TITLE_NORMAL;
const GuildMemberTitle GuildMemberTitle_MAX = MEMBER_TITLE_LEADER;
const int GuildMemberTitle_ARRAYSIZE = GuildMemberTitle_MAX + 1;

const ::google::protobuf::EnumDescriptor* GuildMemberTitle_descriptor();
inline const ::std::string& GuildMemberTitle_Name(GuildMemberTitle value) {
  return ::google::protobuf::internal::NameOfEnum(
    GuildMemberTitle_descriptor(), value);
}
inline bool GuildMemberTitle_Parse(
    const ::std::string& name, GuildMemberTitle* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GuildMemberTitle>(
    GuildMemberTitle_descriptor(), name, value);
}
// ===================================================================

class GuildInfo : public ::google::protobuf::Message {
 public:
  GuildInfo();
  virtual ~GuildInfo();
  
  GuildInfo(const GuildInfo& from);
  
  inline GuildInfo& operator=(const GuildInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildInfo& default_instance();
  
  void Swap(GuildInfo* other);
  
  // implements Message ----------------------------------------------
  
  GuildInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildInfo& from);
  void MergeFrom(const GuildInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 guild_id = 1;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 1;
  inline ::google::protobuf::int32 guild_id() const;
  inline void set_guild_id(::google::protobuf::int32 value);
  
  // optional int32 grade = 2 [default = 1];
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 2;
  inline ::google::protobuf::int32 grade() const;
  inline void set_grade(::google::protobuf::int32 value);
  
  // optional int32 total_member = 3;
  inline bool has_total_member() const;
  inline void clear_total_member();
  static const int kTotalMemberFieldNumber = 3;
  inline ::google::protobuf::int32 total_member() const;
  inline void set_total_member(::google::protobuf::int32 value);
  
  // optional int32 online_member = 4 [default = 0];
  inline bool has_online_member() const;
  inline void clear_online_member();
  static const int kOnlineMemberFieldNumber = 4;
  inline ::google::protobuf::int32 online_member() const;
  inline void set_online_member(::google::protobuf::int32 value);
  
  // optional int64 leader_id = 5;
  inline bool has_leader_id() const;
  inline void clear_leader_id();
  static const int kLeaderIdFieldNumber = 5;
  inline ::google::protobuf::int64 leader_id() const;
  inline void set_leader_id(::google::protobuf::int64 value);
  
  // optional string guild_name = 6;
  inline bool has_guild_name() const;
  inline void clear_guild_name();
  static const int kGuildNameFieldNumber = 6;
  inline const ::std::string& guild_name() const;
  inline void set_guild_name(const ::std::string& value);
  inline void set_guild_name(const char* value);
  inline void set_guild_name(const char* value, size_t size);
  inline ::std::string* mutable_guild_name();
  inline ::std::string* release_guild_name();
  
  // optional string leader_name = 7;
  inline bool has_leader_name() const;
  inline void clear_leader_name();
  static const int kLeaderNameFieldNumber = 7;
  inline const ::std::string& leader_name() const;
  inline void set_leader_name(const ::std::string& value);
  inline void set_leader_name(const char* value);
  inline void set_leader_name(const char* value, size_t size);
  inline ::std::string* mutable_leader_name();
  inline ::std::string* release_leader_name();
  
  // optional int32 max_member = 8;
  inline bool has_max_member() const;
  inline void clear_max_member();
  static const int kMaxMemberFieldNumber = 8;
  inline ::google::protobuf::int32 max_member() const;
  inline void set_max_member(::google::protobuf::int32 value);
  
  // optional int32 self_status = 9;
  inline bool has_self_status() const;
  inline void clear_self_status();
  static const int kSelfStatusFieldNumber = 9;
  inline ::google::protobuf::int32 self_status() const;
  inline void set_self_status(::google::protobuf::int32 value);
  
  // optional int32 rank = 10 [default = 0];
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 10;
  inline ::google::protobuf::int32 rank() const;
  inline void set_rank(::google::protobuf::int32 value);
  
  // optional int32 leader_vip_level = 11 [default = 0];
  inline bool has_leader_vip_level() const;
  inline void clear_leader_vip_level();
  static const int kLeaderVipLevelFieldNumber = 11;
  inline ::google::protobuf::int32 leader_vip_level() const;
  inline void set_leader_vip_level(::google::protobuf::int32 value);
  
  // optional string notice = 12;
  inline bool has_notice() const;
  inline void clear_notice();
  static const int kNoticeFieldNumber = 12;
  inline const ::std::string& notice() const;
  inline void set_notice(const ::std::string& value);
  inline void set_notice(const char* value);
  inline void set_notice(const char* value, size_t size);
  inline ::std::string* mutable_notice();
  inline ::std::string* release_notice();
  
  // optional .protocols.common.Gender leader_gender = 13 [default = MALE];
  inline bool has_leader_gender() const;
  inline void clear_leader_gender();
  static const int kLeaderGenderFieldNumber = 13;
  inline protocols::common::Gender leader_gender() const;
  inline void set_leader_gender(protocols::common::Gender value);
  
  // @@protoc_insertion_point(class_scope:protocols.common.GuildInfo)
 private:
  inline void set_has_guild_id();
  inline void clear_has_guild_id();
  inline void set_has_grade();
  inline void clear_has_grade();
  inline void set_has_total_member();
  inline void clear_has_total_member();
  inline void set_has_online_member();
  inline void clear_has_online_member();
  inline void set_has_leader_id();
  inline void clear_has_leader_id();
  inline void set_has_guild_name();
  inline void clear_has_guild_name();
  inline void set_has_leader_name();
  inline void clear_has_leader_name();
  inline void set_has_max_member();
  inline void clear_has_max_member();
  inline void set_has_self_status();
  inline void clear_has_self_status();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_leader_vip_level();
  inline void clear_has_leader_vip_level();
  inline void set_has_notice();
  inline void clear_has_notice();
  inline void set_has_leader_gender();
  inline void clear_has_leader_gender();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 guild_id_;
  ::google::protobuf::int32 grade_;
  ::google::protobuf::int32 total_member_;
  ::google::protobuf::int32 online_member_;
  ::google::protobuf::int64 leader_id_;
  ::std::string* guild_name_;
  ::std::string* leader_name_;
  ::google::protobuf::int32 max_member_;
  ::google::protobuf::int32 self_status_;
  ::google::protobuf::int32 rank_;
  ::google::protobuf::int32 leader_vip_level_;
  ::std::string* notice_;
  int leader_gender_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];
  
  friend void  protobuf_AddDesc_game_5fguild_2eproto();
  friend void protobuf_AssignDesc_game_5fguild_2eproto();
  friend void protobuf_ShutdownFile_game_5fguild_2eproto();
  
  void InitAsDefaultInstance();
  static GuildInfo* default_instance_;
};
// -------------------------------------------------------------------

class GuildMemberInfo : public ::google::protobuf::Message {
 public:
  GuildMemberInfo();
  virtual ~GuildMemberInfo();
  
  GuildMemberInfo(const GuildMemberInfo& from);
  
  inline GuildMemberInfo& operator=(const GuildMemberInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMemberInfo& default_instance();
  
  void Swap(GuildMemberInfo* other);
  
  // implements Message ----------------------------------------------
  
  GuildMemberInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMemberInfo& from);
  void MergeFrom(const GuildMemberInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int64 member_guid = 1;
  inline bool has_member_guid() const;
  inline void clear_member_guid();
  static const int kMemberGuidFieldNumber = 1;
  inline ::google::protobuf::int64 member_guid() const;
  inline void set_member_guid(::google::protobuf::int64 value);
  
  // optional int32 member_level = 2 [default = 1];
  inline bool has_member_level() const;
  inline void clear_member_level();
  static const int kMemberLevelFieldNumber = 2;
  inline ::google::protobuf::int32 member_level() const;
  inline void set_member_level(::google::protobuf::int32 value);
  
  // optional int32 devote = 3 [default = 0];
  inline bool has_devote() const;
  inline void clear_devote();
  static const int kDevoteFieldNumber = 3;
  inline ::google::protobuf::int32 devote() const;
  inline void set_devote(::google::protobuf::int32 value);
  
  // optional int32 title = 5 [default = 0];
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 5;
  inline ::google::protobuf::int32 title() const;
  inline void set_title(::google::protobuf::int32 value);
  
  // optional int32 job_type = 7;
  inline bool has_job_type() const;
  inline void clear_job_type();
  static const int kJobTypeFieldNumber = 7;
  inline ::google::protobuf::int32 job_type() const;
  inline void set_job_type(::google::protobuf::int32 value);
  
  // optional int32 status = 8;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 8;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);
  
  // optional bool online_flag = 6 [default = false];
  inline bool has_online_flag() const;
  inline void clear_online_flag();
  static const int kOnlineFlagFieldNumber = 6;
  inline bool online_flag() const;
  inline void set_online_flag(bool value);
  
  // optional string name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional int32 vip_level = 9 [default = 0];
  inline bool has_vip_level() const;
  inline void clear_vip_level();
  static const int kVipLevelFieldNumber = 9;
  inline ::google::protobuf::int32 vip_level() const;
  inline void set_vip_level(::google::protobuf::int32 value);
  
  // optional int32 server_id = 10 [default = 0];
  inline bool has_server_id() const;
  inline void clear_server_id();
  static const int kServerIdFieldNumber = 10;
  inline ::google::protobuf::int32 server_id() const;
  inline void set_server_id(::google::protobuf::int32 value);
  
  // optional int32 login_time = 11 [default = 0];
  inline bool has_login_time() const;
  inline void clear_login_time();
  static const int kLoginTimeFieldNumber = 11;
  inline ::google::protobuf::int32 login_time() const;
  inline void set_login_time(::google::protobuf::int32 value);
  
  // optional .protocols.common.Gender gender = 12 [default = MALE];
  inline bool has_gender() const;
  inline void clear_gender();
  static const int kGenderFieldNumber = 12;
  inline protocols::common::Gender gender() const;
  inline void set_gender(protocols::common::Gender value);
  
  // @@protoc_insertion_point(class_scope:protocols.common.GuildMemberInfo)
 private:
  inline void set_has_member_guid();
  inline void clear_has_member_guid();
  inline void set_has_member_level();
  inline void clear_has_member_level();
  inline void set_has_devote();
  inline void clear_has_devote();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_job_type();
  inline void clear_has_job_type();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_online_flag();
  inline void clear_has_online_flag();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_vip_level();
  inline void clear_has_vip_level();
  inline void set_has_server_id();
  inline void clear_has_server_id();
  inline void set_has_login_time();
  inline void clear_has_login_time();
  inline void set_has_gender();
  inline void clear_has_gender();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 member_guid_;
  ::google::protobuf::int32 member_level_;
  ::google::protobuf::int32 devote_;
  ::google::protobuf::int32 title_;
  ::google::protobuf::int32 job_type_;
  ::google::protobuf::int32 status_;
  bool online_flag_;
  ::std::string* name_;
  ::google::protobuf::int32 vip_level_;
  ::google::protobuf::int32 server_id_;
  ::google::protobuf::int32 login_time_;
  int gender_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];
  
  friend void  protobuf_AddDesc_game_5fguild_2eproto();
  friend void protobuf_AssignDesc_game_5fguild_2eproto();
  friend void protobuf_ShutdownFile_game_5fguild_2eproto();
  
  void InitAsDefaultInstance();
  static GuildMemberInfo* default_instance_;
};
// -------------------------------------------------------------------

class GuildDetail : public ::google::protobuf::Message {
 public:
  GuildDetail();
  virtual ~GuildDetail();
  
  GuildDetail(const GuildDetail& from);
  
  inline GuildDetail& operator=(const GuildDetail& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildDetail& default_instance();
  
  void Swap(GuildDetail* other);
  
  // implements Message ----------------------------------------------
  
  GuildDetail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildDetail& from);
  void MergeFrom(const GuildDetail& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .protocols.common.GuildInfo info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::protocols::common::GuildInfo& info() const;
  inline ::protocols::common::GuildInfo* mutable_info();
  inline ::protocols::common::GuildInfo* release_info();
  
  // optional int32 money = 2 [default = 0];
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 2;
  inline ::google::protobuf::int32 money() const;
  inline void set_money(::google::protobuf::int32 value);
  
  // optional int32 exp = 3 [default = 0];
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 3;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);
  
  // optional int32 fee = 5;
  inline bool has_fee() const;
  inline void clear_fee();
  static const int kFeeFieldNumber = 5;
  inline ::google::protobuf::int32 fee() const;
  inline void set_fee(::google::protobuf::int32 value);
  
  // optional string notice = 6;
  inline bool has_notice() const;
  inline void clear_notice();
  static const int kNoticeFieldNumber = 6;
  inline const ::std::string& notice() const;
  inline void set_notice(const ::std::string& value);
  inline void set_notice(const char* value);
  inline void set_notice(const char* value, size_t size);
  inline ::std::string* mutable_notice();
  inline ::std::string* release_notice();
  
  // repeated .protocols.common.GuildMemberInfo member_list = 4;
  inline int member_list_size() const;
  inline void clear_member_list();
  static const int kMemberListFieldNumber = 4;
  inline const ::protocols::common::GuildMemberInfo& member_list(int index) const;
  inline ::protocols::common::GuildMemberInfo* mutable_member_list(int index);
  inline ::protocols::common::GuildMemberInfo* add_member_list();
  inline const ::google::protobuf::RepeatedPtrField< ::protocols::common::GuildMemberInfo >&
      member_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::protocols::common::GuildMemberInfo >*
      mutable_member_list();
  
  // @@protoc_insertion_point(class_scope:protocols.common.GuildDetail)
 private:
  inline void set_has_info();
  inline void clear_has_info();
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_fee();
  inline void clear_has_fee();
  inline void set_has_notice();
  inline void clear_has_notice();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::protocols::common::GuildInfo* info_;
  ::google::protobuf::int32 money_;
  ::google::protobuf::int32 exp_;
  ::std::string* notice_;
  ::google::protobuf::RepeatedPtrField< ::protocols::common::GuildMemberInfo > member_list_;
  ::google::protobuf::int32 fee_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_game_5fguild_2eproto();
  friend void protobuf_AssignDesc_game_5fguild_2eproto();
  friend void protobuf_ShutdownFile_game_5fguild_2eproto();
  
  void InitAsDefaultInstance();
  static GuildDetail* default_instance_;
};
// -------------------------------------------------------------------

class GuildInviteInfo : public ::google::protobuf::Message {
 public:
  GuildInviteInfo();
  virtual ~GuildInviteInfo();
  
  GuildInviteInfo(const GuildInviteInfo& from);
  
  inline GuildInviteInfo& operator=(const GuildInviteInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildInviteInfo& default_instance();
  
  void Swap(GuildInviteInfo* other);
  
  // implements Message ----------------------------------------------
  
  GuildInviteInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildInviteInfo& from);
  void MergeFrom(const GuildInviteInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int64 member_guid = 1;
  inline bool has_member_guid() const;
  inline void clear_member_guid();
  static const int kMemberGuidFieldNumber = 1;
  inline ::google::protobuf::int64 member_guid() const;
  inline void set_member_guid(::google::protobuf::int64 value);
  
  // optional string member_name = 2;
  inline bool has_member_name() const;
  inline void clear_member_name();
  static const int kMemberNameFieldNumber = 2;
  inline const ::std::string& member_name() const;
  inline void set_member_name(const ::std::string& value);
  inline void set_member_name(const char* value);
  inline void set_member_name(const char* value, size_t size);
  inline ::std::string* mutable_member_name();
  inline ::std::string* release_member_name();
  
  // optional int32 guild_id = 3;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 3;
  inline ::google::protobuf::int32 guild_id() const;
  inline void set_guild_id(::google::protobuf::int32 value);
  
  // optional int32 server_id = 5;
  inline bool has_server_id() const;
  inline void clear_server_id();
  static const int kServerIdFieldNumber = 5;
  inline ::google::protobuf::int32 server_id() const;
  inline void set_server_id(::google::protobuf::int32 value);
  
  // optional string guild_name = 4;
  inline bool has_guild_name() const;
  inline void clear_guild_name();
  static const int kGuildNameFieldNumber = 4;
  inline const ::std::string& guild_name() const;
  inline void set_guild_name(const ::std::string& value);
  inline void set_guild_name(const char* value);
  inline void set_guild_name(const char* value, size_t size);
  inline ::std::string* mutable_guild_name();
  inline ::std::string* release_guild_name();
  
  // optional int32 member_level = 6;
  inline bool has_member_level() const;
  inline void clear_member_level();
  static const int kMemberLevelFieldNumber = 6;
  inline ::google::protobuf::int32 member_level() const;
  inline void set_member_level(::google::protobuf::int32 value);
  
  // optional int32 guild_grade = 7;
  inline bool has_guild_grade() const;
  inline void clear_guild_grade();
  static const int kGuildGradeFieldNumber = 7;
  inline ::google::protobuf::int32 guild_grade() const;
  inline void set_guild_grade(::google::protobuf::int32 value);
  
  // optional .protocols.common.Gender gender = 8 [default = MALE];
  inline bool has_gender() const;
  inline void clear_gender();
  static const int kGenderFieldNumber = 8;
  inline protocols::common::Gender gender() const;
  inline void set_gender(protocols::common::Gender value);
  
  // @@protoc_insertion_point(class_scope:protocols.common.GuildInviteInfo)
 private:
  inline void set_has_member_guid();
  inline void clear_has_member_guid();
  inline void set_has_member_name();
  inline void clear_has_member_name();
  inline void set_has_guild_id();
  inline void clear_has_guild_id();
  inline void set_has_server_id();
  inline void clear_has_server_id();
  inline void set_has_guild_name();
  inline void clear_has_guild_name();
  inline void set_has_member_level();
  inline void clear_has_member_level();
  inline void set_has_guild_grade();
  inline void clear_has_guild_grade();
  inline void set_has_gender();
  inline void clear_has_gender();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 member_guid_;
  ::std::string* member_name_;
  ::google::protobuf::int32 guild_id_;
  ::google::protobuf::int32 server_id_;
  ::std::string* guild_name_;
  ::google::protobuf::int32 member_level_;
  ::google::protobuf::int32 guild_grade_;
  int gender_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  friend void  protobuf_AddDesc_game_5fguild_2eproto();
  friend void protobuf_AssignDesc_game_5fguild_2eproto();
  friend void protobuf_ShutdownFile_game_5fguild_2eproto();
  
  void InitAsDefaultInstance();
  static GuildInviteInfo* default_instance_;
};
// -------------------------------------------------------------------

class GuildApplyInfo : public ::google::protobuf::Message {
 public:
  GuildApplyInfo();
  virtual ~GuildApplyInfo();
  
  GuildApplyInfo(const GuildApplyInfo& from);
  
  inline GuildApplyInfo& operator=(const GuildApplyInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildApplyInfo& default_instance();
  
  void Swap(GuildApplyInfo* other);
  
  // implements Message ----------------------------------------------
  
  GuildApplyInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildApplyInfo& from);
  void MergeFrom(const GuildApplyInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int64 guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::int64 guid() const;
  inline void set_guid(::google::protobuf::int64 value);
  
  // optional int32 fight_capacity = 2;
  inline bool has_fight_capacity() const;
  inline void clear_fight_capacity();
  static const int kFightCapacityFieldNumber = 2;
  inline ::google::protobuf::int32 fight_capacity() const;
  inline void set_fight_capacity(::google::protobuf::int32 value);
  
  // optional int32 job_type = 3;
  inline bool has_job_type() const;
  inline void clear_job_type();
  static const int kJobTypeFieldNumber = 3;
  inline ::google::protobuf::int32 job_type() const;
  inline void set_job_type(::google::protobuf::int32 value);
  
  // optional int32 role_level = 4;
  inline bool has_role_level() const;
  inline void clear_role_level();
  static const int kRoleLevelFieldNumber = 4;
  inline ::google::protobuf::int32 role_level() const;
  inline void set_role_level(::google::protobuf::int32 value);
  
  // optional int32 vip_level = 5;
  inline bool has_vip_level() const;
  inline void clear_vip_level();
  static const int kVipLevelFieldNumber = 5;
  inline ::google::protobuf::int32 vip_level() const;
  inline void set_vip_level(::google::protobuf::int32 value);
  
  // optional int32 server_id = 6;
  inline bool has_server_id() const;
  inline void clear_server_id();
  static const int kServerIdFieldNumber = 6;
  inline ::google::protobuf::int32 server_id() const;
  inline void set_server_id(::google::protobuf::int32 value);
  
  // optional string name = 7;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 7;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional .protocols.common.Gender gender = 8 [default = MALE];
  inline bool has_gender() const;
  inline void clear_gender();
  static const int kGenderFieldNumber = 8;
  inline protocols::common::Gender gender() const;
  inline void set_gender(protocols::common::Gender value);
  
  // @@protoc_insertion_point(class_scope:protocols.common.GuildApplyInfo)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_fight_capacity();
  inline void clear_has_fight_capacity();
  inline void set_has_job_type();
  inline void clear_has_job_type();
  inline void set_has_role_level();
  inline void clear_has_role_level();
  inline void set_has_vip_level();
  inline void clear_has_vip_level();
  inline void set_has_server_id();
  inline void clear_has_server_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_gender();
  inline void clear_has_gender();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 guid_;
  ::google::protobuf::int32 fight_capacity_;
  ::google::protobuf::int32 job_type_;
  ::google::protobuf::int32 role_level_;
  ::google::protobuf::int32 vip_level_;
  ::std::string* name_;
  ::google::protobuf::int32 server_id_;
  int gender_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  friend void  protobuf_AddDesc_game_5fguild_2eproto();
  friend void protobuf_AssignDesc_game_5fguild_2eproto();
  friend void protobuf_ShutdownFile_game_5fguild_2eproto();
  
  void InitAsDefaultInstance();
  static GuildApplyInfo* default_instance_;
};
// -------------------------------------------------------------------

class CreateGuildRequest : public ::google::protobuf::Message {
 public:
  CreateGuildRequest();
  virtual ~CreateGuildRequest();
  
  CreateGuildRequest(const CreateGuildRequest& from);
  
  inline CreateGuildRequest& operator=(const CreateGuildRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateGuildRequest& default_instance();
  
  void Swap(CreateGuildRequest* other);
  
  // implements Message ----------------------------------------------
  
  CreateGuildRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateGuildRequest& from);
  void MergeFrom(const CreateGuildRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // @@protoc_insertion_point(class_scope:protocols.common.CreateGuildRequest)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_game_5fguild_2eproto();
  friend void protobuf_AssignDesc_game_5fguild_2eproto();
  friend void protobuf_ShutdownFile_game_5fguild_2eproto();
  
  void InitAsDefaultInstance();
  static CreateGuildRequest* default_instance_;
};
// -------------------------------------------------------------------

class CreateGuildResponse : public ::google::protobuf::Message {
 public:
  CreateGuildResponse();
  virtual ~CreateGuildResponse();
  
  CreateGuildResponse(const CreateGuildResponse& from);
  
  inline CreateGuildResponse& operator=(const CreateGuildResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateGuildResponse& default_instance();
  
  void Swap(CreateGuildResponse* other);
  
  // implements Message ----------------------------------------------
  
  CreateGuildResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateGuildResponse& from);
  void MergeFrom(const CreateGuildResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::google::protobuf::int32 error_code() const;
  inline void set_error_code(::google::protobuf::int32 value);
  
  // optional .protocols.common.GuildDetail detail = 2;
  inline bool has_detail() const;
  inline void clear_detail();
  static const int kDetailFieldNumber = 2;
  inline const ::protocols::common::GuildDetail& detail() const;
  inline ::protocols::common::GuildDetail* mutable_detail();
  inline ::protocols::common::GuildDetail* release_detail();
  
  // @@protoc_insertion_point(class_scope:protocols.common.CreateGuildResponse)
 private:
  inline void set_has_error_code();
  inline void clear_has_error_code();
  inline void set_has_detail();
  inline void clear_has_detail();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::protocols::common::GuildDetail* detail_;
  ::google::protobuf::int32 error_code_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_game_5fguild_2eproto();
  friend void protobuf_AssignDesc_game_5fguild_2eproto();
  friend void protobuf_ShutdownFile_game_5fguild_2eproto();
  
  void InitAsDefaultInstance();
  static CreateGuildResponse* default_instance_;
};
// -------------------------------------------------------------------

class DeleteGuildRequest : public ::google::protobuf::Message {
 public:
  DeleteGuildRequest();
  virtual ~DeleteGuildRequest();
  
  DeleteGuildRequest(const DeleteGuildRequest& from);
  
  inline DeleteGuildRequest& operator=(const DeleteGuildRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteGuildRequest& default_instance();
  
  void Swap(DeleteGuildRequest* other);
  
  // implements Message ----------------------------------------------
  
  DeleteGuildRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteGuildRequest& from);
  void MergeFrom(const DeleteGuildRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 guild_id = 1;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 1;
  inline ::google::protobuf::int32 guild_id() const;
  inline void set_guild_id(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:protocols.common.DeleteGuildRequest)
 private:
  inline void set_has_guild_id();
  inline void clear_has_guild_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 guild_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_game_5fguild_2eproto();
  friend void protobuf_AssignDesc_game_5fguild_2eproto();
  friend void protobuf_ShutdownFile_game_5fguild_2eproto();
  
  void InitAsDefaultInstance();
  static DeleteGuildRequest* default_instance_;
};
// -------------------------------------------------------------------

class DeleteGuildResponse : public ::google::protobuf::Message {
 public:
  DeleteGuildResponse();
  virtual ~DeleteGuildResponse();
  
  DeleteGuildResponse(const DeleteGuildResponse& from);
  
  inline DeleteGuildResponse& operator=(const DeleteGuildResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteGuildResponse& default_instance();
  
  void Swap(DeleteGuildResponse* other);
  
  // implements Message ----------------------------------------------
  
  DeleteGuildResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteGuildResponse& from);
  void MergeFrom(const DeleteGuildResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::google::protobuf::int32 error_code() const;
  inline void set_error_code(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:protocols.common.DeleteGuildResponse)
 private:
  inline void set_has_error_code();
  inline void clear_has_error_code();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 error_code_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_game_5fguild_2eproto();
  friend void protobuf_AssignDesc_game_5fguild_2eproto();
  friend void protobuf_ShutdownFile_game_5fguild_2eproto();
  
  void InitAsDefaultInstance();
  static DeleteGuildResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetGuildListRequest : public ::google::protobuf::Message {
 public:
  GetGuildListRequest();
  virtual ~GetGuildListRequest();
  
  GetGuildListRequest(const GetGuildListRequest& from);
  
  inline GetGuildListRequest& operator=(const GetGuildListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGuildListRequest& default_instance();
  
  void Swap(GetGuildListRequest* other);
  
  // implements Message ----------------------------------------------
  
  GetGuildListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGuildListRequest& from);
  void MergeFrom(const GetGuildListRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 begin = 1;
  inline bool has_begin() const;
  inline void clear_begin();
  static const int kBeginFieldNumber = 1;
  inline ::google::protobuf::int32 begin() const;
  inline void set_begin(::google::protobuf::int32 value);
  
  // optional int32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:protocols.common.GetGuildListRequest)
 private:
  inline void set_has_begin();
  inline void clear_has_begin();
  inline void set_has_count();
  inline void clear_has_count();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 begin_;
  ::google::protobuf::int32 count_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_game_5fguild_2eproto();
  friend void protobuf_AssignDesc_game_5fguild_2eproto();
  friend void protobuf_ShutdownFile_game_5fguild_2eproto();
  
  void InitAsDefaultInstance();
  static GetGuildListRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetGuildListResponse : public ::google::protobuf::Message {
 public:
  GetGuildListResponse();
  virtual ~GetGuildListResponse();
  
  GetGuildListResponse(const GetGuildListResponse& from);
  
  inline GetGuildListResponse& operator=(const GetGuildListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGuildListResponse& default_instance();
  
  void Swap(GetGuildListResponse* other);
  
  // implements Message ----------------------------------------------
  
  GetGuildListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGuildListResponse& from);
  void MergeFrom(const GetGuildListResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::google::protobuf::int32 error_code() const;
  inline void set_error_code(::google::protobuf::int32 value);
  
  // repeated .protocols.common.GuildInfo guild_list = 2;
  inline int guild_list_size() const;
  inline void clear_guild_list();
  static const int kGuildListFieldNumber = 2;
  inline const ::protocols::common::GuildInfo& guild_list(int index) const;
  inline ::protocols::common::GuildInfo* mutable_guild_list(int index);
  inline ::protocols::common::GuildInfo* add_guild_list();
  inline const ::google::protobuf::RepeatedPtrField< ::protocols::common::GuildInfo >&
      guild_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::protocols::common::GuildInfo >*
      mutable_guild_list();
  
  // optional int32 total_count = 3;
  inline bool has_total_count() const;
  inline void clear_total_count();
  static const int kTotalCountFieldNumber = 3;
  inline ::google::protobuf::int32 total_count() const;
  inline void set_total_count(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:protocols.common.GetGuildListResponse)
 private:
  inline void set_has_error_code();
  inline void clear_has_error_code();
  inline void set_has_total_count();
  inline void clear_has_total_count();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::protocols::common::GuildInfo > guild_list_;
  ::google::protobuf::int32 error_code_;
  ::google::protobuf::int32 total_count_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_game_5fguild_2eproto();
  friend void protobuf_AssignDesc_game_5fguild_2eproto();
  friend void protobuf_ShutdownFile_game_5fguild_2eproto();
  
  void InitAsDefaultInstance();
  static GetGuildListResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetGuildDetailRequest : public ::google::protobuf::Message {
 public:
  GetGuildDetailRequest();
  virtual ~GetGuildDetailRequest();
  
  GetGuildDetailRequest(const GetGuildDetailRequest& from);
  
  inline GetGuildDetailRequest& operator=(const GetGuildDetailRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGuildDetailRequest& default_instance();
  
  void Swap(GetGuildDetailRequest* other);
  
  // implements Message ----------------------------------------------
  
  GetGuildDetailRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGuildDetailRequest& from);
  void MergeFrom(const GetGuildDetailRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 guild_id = 1;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 1;
  inline ::google::protobuf::int32 guild_id() const;
  inline void set_guild_id(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:protocols.common.GetGuildDetailRequest)
 private:
  inline void set_has_guild_id();
  inline void clear_has_guild_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 guild_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_game_5fguild_2eproto();
  friend void protobuf_AssignDesc_game_5fguild_2eproto();
  friend void protobuf_ShutdownFile_game_5fguild_2eproto();
  
  void InitAsDefaultInstance();
  static GetGuildDetailRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetGuildDetailResponse : public ::google::protobuf::Message {
 public:
  GetGuildDetailResponse();
  virtual ~GetGuildDetailResponse();
  
  GetGuildDetailResponse(const GetGuildDetailResponse& from);
  
  inline GetGuildDetailResponse& operator=(const GetGuildDetailResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGuildDetailResponse& default_instance();
  
  void Swap(GetGuildDetailResponse* other);
  
  // implements Message ----------------------------------------------
  
  GetGuildDetailResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGuildDetailResponse& from);
  void MergeFrom(const GetGuildDetailResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::google::protobuf::int32 error_code() const;
  inline void set_error_code(::google::protobuf::int32 value);
  
  // optional .protocols.common.GuildDetail detail = 2;
  inline bool has_detail() const;
  inline void clear_detail();
  static const int kDetailFieldNumber = 2;
  inline const ::protocols::common::GuildDetail& detail() const;
  inline ::protocols::common::GuildDetail* mutable_detail();
  inline ::protocols::common::GuildDetail* release_detail();
  
  // @@protoc_insertion_point(class_scope:protocols.common.GetGuildDetailResponse)
 private:
  inline void set_has_error_code();
  inline void clear_has_error_code();
  inline void set_has_detail();
  inline void clear_has_detail();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::protocols::common::GuildDetail* detail_;
  ::google::protobuf::int32 error_code_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_game_5fguild_2eproto();
  friend void protobuf_AssignDesc_game_5fguild_2eproto();
  friend void protobuf_ShutdownFile_game_5fguild_2eproto();
  
  void InitAsDefaultInstance();
  static GetGuildDetailResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetGuildMemberListRequest : public ::google::protobuf::Message {
 public:
  GetGuildMemberListRequest();
  virtual ~GetGuildMemberListRequest();
  
  GetGuildMemberListRequest(const GetGuildMemberListRequest& from);
  
  inline GetGuildMemberListRequest& operator=(const GetGuildMemberListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGuildMemberListRequest& default_instance();
  
  void Swap(GetGuildMemberListRequest* other);
  
  // implements Message ----------------------------------------------
  
  GetGuildMemberListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGuildMemberListRequest& from);
  void MergeFrom(const GetGuildMemberListRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:protocols.common.GetGuildMemberListRequest)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 status_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_game_5fguild_2eproto();
  friend void protobuf_AssignDesc_game_5fguild_2eproto();
  friend void protobuf_ShutdownFile_game_5fguild_2eproto();
  
  void InitAsDefaultInstance();
  static GetGuildMemberListRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetGuildMemberListResponse : public ::google::protobuf::Message {
 public:
  GetGuildMemberListResponse();
  virtual ~GetGuildMemberListResponse();
  
  GetGuildMemberListResponse(const GetGuildMemberListResponse& from);
  
  inline GetGuildMemberListResponse& operator=(const GetGuildMemberListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGuildMemberListResponse& default_instance();
  
  void Swap(GetGuildMemberListResponse* other);
  
  // implements Message ----------------------------------------------
  
  GetGuildMemberListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGuildMemberListResponse& from);
  void MergeFrom(const GetGuildMemberListResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::google::protobuf::int32 error_code() const;
  inline void set_error_code(::google::protobuf::int32 value);
  
  // repeated .protocols.common.GuildMemberInfo member_list = 2;
  inline int member_list_size() const;
  inline void clear_member_list();
  static const int kMemberListFieldNumber = 2;
  inline const ::protocols::common::GuildMemberInfo& member_list(int index) const;
  inline ::protocols::common::GuildMemberInfo* mutable_member_list(int index);
  inline ::protocols::common::GuildMemberInfo* add_member_list();
  inline const ::google::protobuf::RepeatedPtrField< ::protocols::common::GuildMemberInfo >&
      member_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::protocols::common::GuildMemberInfo >*
      mutable_member_list();
  
  // @@protoc_insertion_point(class_scope:protocols.common.GetGuildMemberListResponse)
 private:
  inline void set_has_error_code();
  inline void clear_has_error_code();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::protocols::common::GuildMemberInfo > member_list_;
  ::google::protobuf::int32 error_code_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_game_5fguild_2eproto();
  friend void protobuf_AssignDesc_game_5fguild_2eproto();
  friend void protobuf_ShutdownFile_game_5fguild_2eproto();
  
  void InitAsDefaultInstance();
  static GetGuildMemberListResponse* default_instance_;
};
// -------------------------------------------------------------------

class ApplyJoinGuildRequest : public ::google::protobuf::Message {
 public:
  ApplyJoinGuildRequest();
  virtual ~ApplyJoinGuildRequest();
  
  ApplyJoinGuildRequest(const ApplyJoinGuildRequest& from);
  
  inline ApplyJoinGuildRequest& operator=(const ApplyJoinGuildRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ApplyJoinGuildRequest& default_instance();
  
  void Swap(ApplyJoinGuildRequest* other);
  
  // implements Message ----------------------------------------------
  
  ApplyJoinGuildRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ApplyJoinGuildRequest& from);
  void MergeFrom(const ApplyJoinGuildRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 guild_id = 1;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 1;
  inline ::google::protobuf::int32 guild_id() const;
  inline void set_guild_id(::google::protobuf::int32 value);
  
  // optional bool apply_flag = 2 [default = true];
  inline bool has_apply_flag() const;
  inline void clear_apply_flag();
  static const int kApplyFlagFieldNumber = 2;
  inline bool apply_flag() const;
  inline void set_apply_flag(bool value);
  
  // @@protoc_insertion_point(class_scope:protocols.common.ApplyJoinGuildRequest)
 private:
  inline void set_has_guild_id();
  inline void clear_has_guild_id();
  inline void set_has_apply_flag();
  inline void clear_has_apply_flag();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 guild_id_;
  bool apply_flag_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_game_5fguild_2eproto();
  friend void protobuf_AssignDesc_game_5fguild_2eproto();
  friend void protobuf_ShutdownFile_game_5fguild_2eproto();
  
  void InitAsDefaultInstance();
  static ApplyJoinGuildRequest* default_instance_;
};
// -------------------------------------------------------------------

class ApplyJoinGuildResponse : public ::google::protobuf::Message {
 public:
  ApplyJoinGuildResponse();
  virtual ~ApplyJoinGuildResponse();
  
  ApplyJoinGuildResponse(const ApplyJoinGuildResponse& from);
  
  inline ApplyJoinGuildResponse& operator=(const ApplyJoinGuildResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ApplyJoinGuildResponse& default_instance();
  
  void Swap(ApplyJoinGuildResponse* other);
  
  // implements Message ----------------------------------------------
  
  ApplyJoinGuildResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ApplyJoinGuildResponse& from);
  void MergeFrom(const ApplyJoinGuildResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::google::protobuf::int32 error_code() const;
  inline void set_error_code(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:protocols.common.ApplyJoinGuildResponse)
 private:
  inline void set_has_error_code();
  inline void clear_has_error_code();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 error_code_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_game_5fguild_2eproto();
  friend void protobuf_AssignDesc_game_5fguild_2eproto();
  friend void protobuf_ShutdownFile_game_5fguild_2eproto();
  
  void InitAsDefaultInstance();
  static ApplyJoinGuildResponse* default_instance_;
};
// -------------------------------------------------------------------

class AnswerJoinGuildRequest : public ::google::protobuf::Message {
 public:
  AnswerJoinGuildRequest();
  virtual ~AnswerJoinGuildRequest();
  
  AnswerJoinGuildRequest(const AnswerJoinGuildRequest& from);
  
  inline AnswerJoinGuildRequest& operator=(const AnswerJoinGuildRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AnswerJoinGuildRequest& default_instance();
  
  void Swap(AnswerJoinGuildRequest* other);
  
  // implements Message ----------------------------------------------
  
  AnswerJoinGuildRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AnswerJoinGuildRequest& from);
  void MergeFrom(const AnswerJoinGuildRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int64 member_guid = 2;
  inline bool has_member_guid() const;
  inline void clear_member_guid();
  static const int kMemberGuidFieldNumber = 2;
  inline ::google::protobuf::int64 member_guid() const;
  inline void set_member_guid(::google::protobuf::int64 value);
  
  // required bool accept_flag = 3;
  inline bool has_accept_flag() const;
  inline void clear_accept_flag();
  static const int kAcceptFlagFieldNumber = 3;
  inline bool accept_flag() const;
  inline void set_accept_flag(bool value);
  
  // @@protoc_insertion_point(class_scope:protocols.common.AnswerJoinGuildRequest)
 private:
  inline void set_has_member_guid();
  inline void clear_has_member_guid();
  inline void set_has_accept_flag();
  inline void clear_has_accept_flag();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 member_guid_;
  bool accept_flag_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_game_5fguild_2eproto();
  friend void protobuf_AssignDesc_game_5fguild_2eproto();
  friend void protobuf_ShutdownFile_game_5fguild_2eproto();
  
  void InitAsDefaultInstance();
  static AnswerJoinGuildRequest* default_instance_;
};
// -------------------------------------------------------------------

class AnswerJoinGuildResponse : public ::google::protobuf::Message {
 public:
  AnswerJoinGuildResponse();
  virtual ~AnswerJoinGuildResponse();
  
  AnswerJoinGuildResponse(const AnswerJoinGuildResponse& from);
  
  inline AnswerJoinGuildResponse& operator=(const AnswerJoinGuildResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AnswerJoinGuildResponse& default_instance();
  
  void Swap(AnswerJoinGuildResponse* other);
  
  // implements Message ----------------------------------------------
  
  AnswerJoinGuildResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AnswerJoinGuildResponse& from);
  void MergeFrom(const AnswerJoinGuildResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::google::protobuf::int32 error_code() const;
  inline void set_error_code(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:protocols.common.AnswerJoinGuildResponse)
 private:
  inline void set_has_error_code();
  inline void clear_has_error_code();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 error_code_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_game_5fguild_2eproto();
  friend void protobuf_AssignDesc_game_5fguild_2eproto();
  friend void protobuf_ShutdownFile_game_5fguild_2eproto();
  
  void InitAsDefaultInstance();
  static AnswerJoinGuildResponse* default_instance_;
};
// -------------------------------------------------------------------

class AnswerJoinGuildNotify : public ::google::protobuf::Message {
 public:
  AnswerJoinGuildNotify();
  virtual ~AnswerJoinGuildNotify();
  
  AnswerJoinGuildNotify(const AnswerJoinGuildNotify& from);
  
  inline AnswerJoinGuildNotify& operator=(const AnswerJoinGuildNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AnswerJoinGuildNotify& default_instance();
  
  void Swap(AnswerJoinGuildNotify* other);
  
  // implements Message ----------------------------------------------
  
  AnswerJoinGuildNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AnswerJoinGuildNotify& from);
  void MergeFrom(const AnswerJoinGuildNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 guild_id = 1;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 1;
  inline ::google::protobuf::int32 guild_id() const;
  inline void set_guild_id(::google::protobuf::int32 value);
  
  // required bool accept_flag = 2;
  inline bool has_accept_flag() const;
  inline void clear_accept_flag();
  static const int kAcceptFlagFieldNumber = 2;
  inline bool accept_flag() const;
  inline void set_accept_flag(bool value);
  
  // optional string guild_name = 3;
  inline bool has_guild_name() const;
  inline void clear_guild_name();
  static const int kGuildNameFieldNumber = 3;
  inline const ::std::string& guild_name() const;
  inline void set_guild_name(const ::std::string& value);
  inline void set_guild_name(const char* value);
  inline void set_guild_name(const char* value, size_t size);
  inline ::std::string* mutable_guild_name();
  inline ::std::string* release_guild_name();
  
  // @@protoc_insertion_point(class_scope:protocols.common.AnswerJoinGuildNotify)
 private:
  inline void set_has_guild_id();
  inline void clear_has_guild_id();
  inline void set_has_accept_flag();
  inline void clear_has_accept_flag();
  inline void set_has_guild_name();
  inline void clear_has_guild_name();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 guild_id_;
  bool accept_flag_;
  ::std::string* guild_name_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_game_5fguild_2eproto();
  friend void protobuf_AssignDesc_game_5fguild_2eproto();
  friend void protobuf_ShutdownFile_game_5fguild_2eproto();
  
  void InitAsDefaultInstance();
  static AnswerJoinGuildNotify* default_instance_;
};
// -------------------------------------------------------------------

class InviteJoinGuildRequest : public ::google::protobuf::Message {
 public:
  InviteJoinGuildRequest();
  virtual ~InviteJoinGuildRequest();
  
  InviteJoinGuildRequest(const InviteJoinGuildRequest& from);
  
  inline InviteJoinGuildRequest& operator=(const InviteJoinGuildRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const InviteJoinGuildRequest& default_instance();
  
  void Swap(InviteJoinGuildRequest* other);
  
  // implements Message ----------------------------------------------
  
  InviteJoinGuildRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InviteJoinGuildRequest& from);
  void MergeFrom(const InviteJoinGuildRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int64 member_guid = 1;
  inline bool has_member_guid() const;
  inline void clear_member_guid();
  static const int kMemberGuidFieldNumber = 1;
  inline ::google::protobuf::int64 member_guid() const;
  inline void set_member_guid(::google::protobuf::int64 value);
  
  // @@protoc_insertion_point(class_scope:protocols.common.InviteJoinGuildRequest)
 private:
  inline void set_has_member_guid();
  inline void clear_has_member_guid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 member_guid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_game_5fguild_2eproto();
  friend void protobuf_AssignDesc_game_5fguild_2eproto();
  friend void protobuf_ShutdownFile_game_5fguild_2eproto();
  
  void InitAsDefaultInstance();
  static InviteJoinGuildRequest* default_instance_;
};
// -------------------------------------------------------------------

class InviteJoinGuildResponse : public ::google::protobuf::Message {
 public:
  InviteJoinGuildResponse();
  virtual ~InviteJoinGuildResponse();
  
  InviteJoinGuildResponse(const InviteJoinGuildResponse& from);
  
  inline InviteJoinGuildResponse& operator=(const InviteJoinGuildResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const InviteJoinGuildResponse& default_instance();
  
  void Swap(InviteJoinGuildResponse* other);
  
  // implements Message ----------------------------------------------
  
  InviteJoinGuildResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InviteJoinGuildResponse& from);
  void MergeFrom(const InviteJoinGuildResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::google::protobuf::int32 error_code() const;
  inline void set_error_code(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:protocols.common.InviteJoinGuildResponse)
 private:
  inline void set_has_error_code();
  inline void clear_has_error_code();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 error_code_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_game_5fguild_2eproto();
  friend void protobuf_AssignDesc_game_5fguild_2eproto();
  friend void protobuf_ShutdownFile_game_5fguild_2eproto();
  
  void InitAsDefaultInstance();
  static InviteJoinGuildResponse* default_instance_;
};
// -------------------------------------------------------------------

class InviteJoinGuildNotify : public ::google::protobuf::Message {
 public:
  InviteJoinGuildNotify();
  virtual ~InviteJoinGuildNotify();
  
  InviteJoinGuildNotify(const InviteJoinGuildNotify& from);
  
  inline InviteJoinGuildNotify& operator=(const InviteJoinGuildNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const InviteJoinGuildNotify& default_instance();
  
  void Swap(InviteJoinGuildNotify* other);
  
  // implements Message ----------------------------------------------
  
  InviteJoinGuildNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InviteJoinGuildNotify& from);
  void MergeFrom(const InviteJoinGuildNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int64 member_guid = 1;
  inline bool has_member_guid() const;
  inline void clear_member_guid();
  static const int kMemberGuidFieldNumber = 1;
  inline ::google::protobuf::int64 member_guid() const;
  inline void set_member_guid(::google::protobuf::int64 value);
  
  // optional string member_name = 2;
  inline bool has_member_name() const;
  inline void clear_member_name();
  static const int kMemberNameFieldNumber = 2;
  inline const ::std::string& member_name() const;
  inline void set_member_name(const ::std::string& value);
  inline void set_member_name(const char* value);
  inline void set_member_name(const char* value, size_t size);
  inline ::std::string* mutable_member_name();
  inline ::std::string* release_member_name();
  
  // optional int32 guild_id = 3;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 3;
  inline ::google::protobuf::int32 guild_id() const;
  inline void set_guild_id(::google::protobuf::int32 value);
  
  // optional int32 server_id = 5;
  inline bool has_server_id() const;
  inline void clear_server_id();
  static const int kServerIdFieldNumber = 5;
  inline ::google::protobuf::int32 server_id() const;
  inline void set_server_id(::google::protobuf::int32 value);
  
  // optional string guild_name = 4;
  inline bool has_guild_name() const;
  inline void clear_guild_name();
  static const int kGuildNameFieldNumber = 4;
  inline const ::std::string& guild_name() const;
  inline void set_guild_name(const ::std::string& value);
  inline void set_guild_name(const char* value);
  inline void set_guild_name(const char* value, size_t size);
  inline ::std::string* mutable_guild_name();
  inline ::std::string* release_guild_name();
  
  // optional int32 member_level = 6;
  inline bool has_member_level() const;
  inline void clear_member_level();
  static const int kMemberLevelFieldNumber = 6;
  inline ::google::protobuf::int32 member_level() const;
  inline void set_member_level(::google::protobuf::int32 value);
  
  // optional int32 guild_grade = 7;
  inline bool has_guild_grade() const;
  inline void clear_guild_grade();
  static const int kGuildGradeFieldNumber = 7;
  inline ::google::protobuf::int32 guild_grade() const;
  inline void set_guild_grade(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:protocols.common.InviteJoinGuildNotify)
 private:
  inline void set_has_member_guid();
  inline void clear_has_member_guid();
  inline void set_has_member_name();
  inline void clear_has_member_name();
  inline void set_has_guild_id();
  inline void clear_has_guild_id();
  inline void set_has_server_id();
  inline void clear_has_server_id();
  inline void set_has_guild_name();
  inline void clear_has_guild_name();
  inline void set_has_member_level();
  inline void clear_has_member_level();
  inline void set_has_guild_grade();
  inline void clear_has_guild_grade();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 member_guid_;
  ::std::string* member_name_;
  ::google::protobuf::int32 guild_id_;
  ::google::protobuf::int32 server_id_;
  ::std::string* guild_name_;
  ::google::protobuf::int32 member_level_;
  ::google::protobuf::int32 guild_grade_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_game_5fguild_2eproto();
  friend void protobuf_AssignDesc_game_5fguild_2eproto();
  friend void protobuf_ShutdownFile_game_5fguild_2eproto();
  
  void InitAsDefaultInstance();
  static InviteJoinGuildNotify* default_instance_;
};
// -------------------------------------------------------------------

class GetGuildInviteListRequest : public ::google::protobuf::Message {
 public:
  GetGuildInviteListRequest();
  virtual ~GetGuildInviteListRequest();
  
  GetGuildInviteListRequest(const GetGuildInviteListRequest& from);
  
  inline GetGuildInviteListRequest& operator=(const GetGuildInviteListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGuildInviteListRequest& default_instance();
  
  void Swap(GetGuildInviteListRequest* other);
  
  // implements Message ----------------------------------------------
  
  GetGuildInviteListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGuildInviteListRequest& from);
  void MergeFrom(const GetGuildInviteListRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:protocols.common.GetGuildInviteListRequest)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_game_5fguild_2eproto();
  friend void protobuf_AssignDesc_game_5fguild_2eproto();
  friend void protobuf_ShutdownFile_game_5fguild_2eproto();
  
  void InitAsDefaultInstance();
  static GetGuildInviteListRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetGuildInviteListResponse : public ::google::protobuf::Message {
 public:
  GetGuildInviteListResponse();
  virtual ~GetGuildInviteListResponse();
  
  GetGuildInviteListResponse(const GetGuildInviteListResponse& from);
  
  inline GetGuildInviteListResponse& operator=(const GetGuildInviteListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGuildInviteListResponse& default_instance();
  
  void Swap(GetGuildInviteListResponse* other);
  
  // implements Message ----------------------------------------------
  
  GetGuildInviteListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGuildInviteListResponse& from);
  void MergeFrom(const GetGuildInviteListResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::google::protobuf::int32 error_code() const;
  inline void set_error_code(::google::protobuf::int32 value);
  
  // repeated .protocols.common.GuildInviteInfo invite_list = 2;
  inline int invite_list_size() const;
  inline void clear_invite_list();
  static const int kInviteListFieldNumber = 2;
  inline const ::protocols::common::GuildInviteInfo& invite_list(int index) const;
  inline ::protocols::common::GuildInviteInfo* mutable_invite_list(int index);
  inline ::protocols::common::GuildInviteInfo* add_invite_list();
  inline const ::google::protobuf::RepeatedPtrField< ::protocols::common::GuildInviteInfo >&
      invite_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::protocols::common::GuildInviteInfo >*
      mutable_invite_list();
  
  // @@protoc_insertion_point(class_scope:protocols.common.GetGuildInviteListResponse)
 private:
  inline void set_has_error_code();
  inline void clear_has_error_code();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::protocols::common::GuildInviteInfo > invite_list_;
  ::google::protobuf::int32 error_code_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_game_5fguild_2eproto();
  friend void protobuf_AssignDesc_game_5fguild_2eproto();
  friend void protobuf_ShutdownFile_game_5fguild_2eproto();
  
  void InitAsDefaultInstance();
  static GetGuildInviteListResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetGuildApplyListRequest : public ::google::protobuf::Message {
 public:
  GetGuildApplyListRequest();
  virtual ~GetGuildApplyListRequest();
  
  GetGuildApplyListRequest(const GetGuildApplyListRequest& from);
  
  inline GetGuildApplyListRequest& operator=(const GetGuildApplyListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGuildApplyListRequest& default_instance();
  
  void Swap(GetGuildApplyListRequest* other);
  
  // implements Message ----------------------------------------------
  
  GetGuildApplyListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGuildApplyListRequest& from);
  void MergeFrom(const GetGuildApplyListRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 guild_id = 1;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 1;
  inline ::google::protobuf::int32 guild_id() const;
  inline void set_guild_id(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:protocols.common.GetGuildApplyListRequest)
 private:
  inline void set_has_guild_id();
  inline void clear_has_guild_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 guild_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_game_5fguild_2eproto();
  friend void protobuf_AssignDesc_game_5fguild_2eproto();
  friend void protobuf_ShutdownFile_game_5fguild_2eproto();
  
  void InitAsDefaultInstance();
  static GetGuildApplyListRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetGuildApplyListResponse : public ::google::protobuf::Message {
 public:
  GetGuildApplyListResponse();
  virtual ~GetGuildApplyListResponse();
  
  GetGuildApplyListResponse(const GetGuildApplyListResponse& from);
  
  inline GetGuildApplyListResponse& operator=(const GetGuildApplyListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGuildApplyListResponse& default_instance();
  
  void Swap(GetGuildApplyListResponse* other);
  
  // implements Message ----------------------------------------------
  
  GetGuildApplyListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetGuildApplyListResponse& from);
  void MergeFrom(const GetGuildApplyListResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::google::protobuf::int32 error_code() const;
  inline void set_error_code(::google::protobuf::int32 value);
  
  // repeated .protocols.common.GuildApplyInfo apply_list = 2;
  inline int apply_list_size() const;
  inline void clear_apply_list();
  static const int kApplyListFieldNumber = 2;
  inline const ::protocols::common::GuildApplyInfo& apply_list(int index) const;
  inline ::protocols::common::GuildApplyInfo* mutable_apply_list(int index);
  inline ::protocols::common::GuildApplyInfo* add_apply_list();
  inline const ::google::protobuf::RepeatedPtrField< ::protocols::common::GuildApplyInfo >&
      apply_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::protocols::common::GuildApplyInfo >*
      mutable_apply_list();
  
  // @@protoc_insertion_point(class_scope:protocols.common.GetGuildApplyListResponse)
 private:
  inline void set_has_error_code();
  inline void clear_has_error_code();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::protocols::common::GuildApplyInfo > apply_list_;
  ::google::protobuf::int32 error_code_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_game_5fguild_2eproto();
  friend void protobuf_AssignDesc_game_5fguild_2eproto();
  friend void protobuf_ShutdownFile_game_5fguild_2eproto();
  
  void InitAsDefaultInstance();
  static GetGuildApplyListResponse* default_instance_;
};
// -------------------------------------------------------------------

class GuildMemberNotify : public ::google::protobuf::Message {
 public:
  GuildMemberNotify();
  virtual ~GuildMemberNotify();
  
  GuildMemberNotify(const GuildMemberNotify& from);
  
  inline GuildMemberNotify& operator=(const GuildMemberNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMemberNotify& default_instance();
  
  void Swap(GuildMemberNotify* other);
  
  // implements Message ----------------------------------------------
  
  GuildMemberNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMemberNotify& from);
  void MergeFrom(const GuildMemberNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .protocols.common.GuildMemberInfo member_info = 1;
  inline bool has_member_info() const;
  inline void clear_member_info();
  static const int kMemberInfoFieldNumber = 1;
  inline const ::protocols::common::GuildMemberInfo& member_info() const;
  inline ::protocols::common::GuildMemberInfo* mutable_member_info();
  inline ::protocols::common::GuildMemberInfo* release_member_info();
  
  // optional int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);
  
  // required int32 guild_id = 3;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 3;
  inline ::google::protobuf::int32 guild_id() const;
  inline void set_guild_id(::google::protobuf::int32 value);
  
  // optional string guild_name = 4;
  inline bool has_guild_name() const;
  inline void clear_guild_name();
  static const int kGuildNameFieldNumber = 4;
  inline const ::std::string& guild_name() const;
  inline void set_guild_name(const ::std::string& value);
  inline void set_guild_name(const char* value);
  inline void set_guild_name(const char* value, size_t size);
  inline ::std::string* mutable_guild_name();
  inline ::std::string* release_guild_name();
  
  // @@protoc_insertion_point(class_scope:protocols.common.GuildMemberNotify)
 private:
  inline void set_has_member_info();
  inline void clear_has_member_info();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_guild_id();
  inline void clear_has_guild_id();
  inline void set_has_guild_name();
  inline void clear_has_guild_name();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::protocols::common::GuildMemberInfo* member_info_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 guild_id_;
  ::std::string* guild_name_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_game_5fguild_2eproto();
  friend void protobuf_AssignDesc_game_5fguild_2eproto();
  friend void protobuf_ShutdownFile_game_5fguild_2eproto();
  
  void InitAsDefaultInstance();
  static GuildMemberNotify* default_instance_;
};
// -------------------------------------------------------------------

class GuildTitleNotify : public ::google::protobuf::Message {
 public:
  GuildTitleNotify();
  virtual ~GuildTitleNotify();
  
  GuildTitleNotify(const GuildTitleNotify& from);
  
  inline GuildTitleNotify& operator=(const GuildTitleNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildTitleNotify& default_instance();
  
  void Swap(GuildTitleNotify* other);
  
  // implements Message ----------------------------------------------
  
  GuildTitleNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildTitleNotify& from);
  void MergeFrom(const GuildTitleNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int64 member_guid = 1;
  inline bool has_member_guid() const;
  inline void clear_member_guid();
  static const int kMemberGuidFieldNumber = 1;
  inline ::google::protobuf::int64 member_guid() const;
  inline void set_member_guid(::google::protobuf::int64 value);
  
  // optional int32 title = 2;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 2;
  inline ::google::protobuf::int32 title() const;
  inline void set_title(::google::protobuf::int32 value);
  
  // optional int32 guild_id = 3;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 3;
  inline ::google::protobuf::int32 guild_id() const;
  inline void set_guild_id(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:protocols.common.GuildTitleNotify)
 private:
  inline void set_has_member_guid();
  inline void clear_has_member_guid();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_guild_id();
  inline void clear_has_guild_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 member_guid_;
  ::google::protobuf::int32 title_;
  ::google::protobuf::int32 guild_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_game_5fguild_2eproto();
  friend void protobuf_AssignDesc_game_5fguild_2eproto();
  friend void protobuf_ShutdownFile_game_5fguild_2eproto();
  
  void InitAsDefaultInstance();
  static GuildTitleNotify* default_instance_;
};
// -------------------------------------------------------------------

class ReplyJoinGuildRequest : public ::google::protobuf::Message {
 public:
  ReplyJoinGuildRequest();
  virtual ~ReplyJoinGuildRequest();
  
  ReplyJoinGuildRequest(const ReplyJoinGuildRequest& from);
  
  inline ReplyJoinGuildRequest& operator=(const ReplyJoinGuildRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyJoinGuildRequest& default_instance();
  
  void Swap(ReplyJoinGuildRequest* other);
  
  // implements Message ----------------------------------------------
  
  ReplyJoinGuildRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyJoinGuildRequest& from);
  void MergeFrom(const ReplyJoinGuildRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 guild_id = 1;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 1;
  inline ::google::protobuf::int32 guild_id() const;
  inline void set_guild_id(::google::protobuf::int32 value);
  
  // optional bool accept_flag = 2 [default = true];
  inline bool has_accept_flag() const;
  inline void clear_accept_flag();
  static const int kAcceptFlagFieldNumber = 2;
  inline bool accept_flag() const;
  inline void set_accept_flag(bool value);
  
  // @@protoc_insertion_point(class_scope:protocols.common.ReplyJoinGuildRequest)
 private:
  inline void set_has_guild_id();
  inline void clear_has_guild_id();
  inline void set_has_accept_flag();
  inline void clear_has_accept_flag();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 guild_id_;
  bool accept_flag_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_game_5fguild_2eproto();
  friend void protobuf_AssignDesc_game_5fguild_2eproto();
  friend void protobuf_ShutdownFile_game_5fguild_2eproto();
  
  void InitAsDefaultInstance();
  static ReplyJoinGuildRequest* default_instance_;
};
// -------------------------------------------------------------------

class ReplyJoinGuildResponse : public ::google::protobuf::Message {
 public:
  ReplyJoinGuildResponse();
  virtual ~ReplyJoinGuildResponse();
  
  ReplyJoinGuildResponse(const ReplyJoinGuildResponse& from);
  
  inline ReplyJoinGuildResponse& operator=(const ReplyJoinGuildResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplyJoinGuildResponse& default_instance();
  
  void Swap(ReplyJoinGuildResponse* other);
  
  // implements Message ----------------------------------------------
  
  ReplyJoinGuildResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReplyJoinGuildResponse& from);
  void MergeFrom(const ReplyJoinGuildResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::google::protobuf::int32 error_code() const;
  inline void set_error_code(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:protocols.common.ReplyJoinGuildResponse)
 private:
  inline void set_has_error_code();
  inline void clear_has_error_code();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 error_code_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_game_5fguild_2eproto();
  friend void protobuf_AssignDesc_game_5fguild_2eproto();
  friend void protobuf_ShutdownFile_game_5fguild_2eproto();
  
  void InitAsDefaultInstance();
  static ReplyJoinGuildResponse* default_instance_;
};
// -------------------------------------------------------------------

class DeleteGuildMemberRequest : public ::google::protobuf::Message {
 public:
  DeleteGuildMemberRequest();
  virtual ~DeleteGuildMemberRequest();
  
  DeleteGuildMemberRequest(const DeleteGuildMemberRequest& from);
  
  inline DeleteGuildMemberRequest& operator=(const DeleteGuildMemberRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteGuildMemberRequest& default_instance();
  
  void Swap(DeleteGuildMemberRequest* other);
  
  // implements Message ----------------------------------------------
  
  DeleteGuildMemberRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteGuildMemberRequest& from);
  void MergeFrom(const DeleteGuildMemberRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int64 member_guid = 1;
  inline bool has_member_guid() const;
  inline void clear_member_guid();
  static const int kMemberGuidFieldNumber = 1;
  inline ::google::protobuf::int64 member_guid() const;
  inline void set_member_guid(::google::protobuf::int64 value);
  
  // @@protoc_insertion_point(class_scope:protocols.common.DeleteGuildMemberRequest)
 private:
  inline void set_has_member_guid();
  inline void clear_has_member_guid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 member_guid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_game_5fguild_2eproto();
  friend void protobuf_AssignDesc_game_5fguild_2eproto();
  friend void protobuf_ShutdownFile_game_5fguild_2eproto();
  
  void InitAsDefaultInstance();
  static DeleteGuildMemberRequest* default_instance_;
};
// -------------------------------------------------------------------

class DeleteGuildMemberResponse : public ::google::protobuf::Message {
 public:
  DeleteGuildMemberResponse();
  virtual ~DeleteGuildMemberResponse();
  
  DeleteGuildMemberResponse(const DeleteGuildMemberResponse& from);
  
  inline DeleteGuildMemberResponse& operator=(const DeleteGuildMemberResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteGuildMemberResponse& default_instance();
  
  void Swap(DeleteGuildMemberResponse* other);
  
  // implements Message ----------------------------------------------
  
  DeleteGuildMemberResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteGuildMemberResponse& from);
  void MergeFrom(const DeleteGuildMemberResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::google::protobuf::int32 error_code() const;
  inline void set_error_code(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:protocols.common.DeleteGuildMemberResponse)
 private:
  inline void set_has_error_code();
  inline void clear_has_error_code();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 error_code_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_game_5fguild_2eproto();
  friend void protobuf_AssignDesc_game_5fguild_2eproto();
  friend void protobuf_ShutdownFile_game_5fguild_2eproto();
  
  void InitAsDefaultInstance();
  static DeleteGuildMemberResponse* default_instance_;
};
// -------------------------------------------------------------------

class DeleteGuildMemberNotify : public ::google::protobuf::Message {
 public:
  DeleteGuildMemberNotify();
  virtual ~DeleteGuildMemberNotify();
  
  DeleteGuildMemberNotify(const DeleteGuildMemberNotify& from);
  
  inline DeleteGuildMemberNotify& operator=(const DeleteGuildMemberNotify& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteGuildMemberNotify& default_instance();
  
  void Swap(DeleteGuildMemberNotify* other);
  
  // implements Message ----------------------------------------------
  
  DeleteGuildMemberNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteGuildMemberNotify& from);
  void MergeFrom(const DeleteGuildMemberNotify& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 guild_id = 1;
  inline bool has_guild_id() const;
  inline void clear_guild_id();
  static const int kGuildIdFieldNumber = 1;
  inline ::google::protobuf::int32 guild_id() const;
  inline void set_guild_id(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:protocols.common.DeleteGuildMemberNotify)
 private:
  inline void set_has_guild_id();
  inline void clear_has_guild_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 guild_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_game_5fguild_2eproto();
  friend void protobuf_AssignDesc_game_5fguild_2eproto();
  friend void protobuf_ShutdownFile_game_5fguild_2eproto();
  
  void InitAsDefaultInstance();
  static DeleteGuildMemberNotify* default_instance_;
};
// -------------------------------------------------------------------

class SetGuildMemberTitleRequest : public ::google::protobuf::Message {
 public:
  SetGuildMemberTitleRequest();
  virtual ~SetGuildMemberTitleRequest();
  
  SetGuildMemberTitleRequest(const SetGuildMemberTitleRequest& from);
  
  inline SetGuildMemberTitleRequest& operator=(const SetGuildMemberTitleRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetGuildMemberTitleRequest& default_instance();
  
  void Swap(SetGuildMemberTitleRequest* other);
  
  // implements Message ----------------------------------------------
  
  SetGuildMemberTitleRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetGuildMemberTitleRequest& from);
  void MergeFrom(const SetGuildMemberTitleRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int64 member_guid = 1;
  inline bool has_member_guid() const;
  inline void clear_member_guid();
  static const int kMemberGuidFieldNumber = 1;
  inline ::google::protobuf::int64 member_guid() const;
  inline void set_member_guid(::google::protobuf::int64 value);
  
  // optional int32 member_title = 2;
  inline bool has_member_title() const;
  inline void clear_member_title();
  static const int kMemberTitleFieldNumber = 2;
  inline ::google::protobuf::int32 member_title() const;
  inline void set_member_title(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:protocols.common.SetGuildMemberTitleRequest)
 private:
  inline void set_has_member_guid();
  inline void clear_has_member_guid();
  inline void set_has_member_title();
  inline void clear_has_member_title();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 member_guid_;
  ::google::protobuf::int32 member_title_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_game_5fguild_2eproto();
  friend void protobuf_AssignDesc_game_5fguild_2eproto();
  friend void protobuf_ShutdownFile_game_5fguild_2eproto();
  
  void InitAsDefaultInstance();
  static SetGuildMemberTitleRequest* default_instance_;
};
// -------------------------------------------------------------------

class SetGuildMemberTitleResponse : public ::google::protobuf::Message {
 public:
  SetGuildMemberTitleResponse();
  virtual ~SetGuildMemberTitleResponse();
  
  SetGuildMemberTitleResponse(const SetGuildMemberTitleResponse& from);
  
  inline SetGuildMemberTitleResponse& operator=(const SetGuildMemberTitleResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetGuildMemberTitleResponse& default_instance();
  
  void Swap(SetGuildMemberTitleResponse* other);
  
  // implements Message ----------------------------------------------
  
  SetGuildMemberTitleResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetGuildMemberTitleResponse& from);
  void MergeFrom(const SetGuildMemberTitleResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::google::protobuf::int32 error_code() const;
  inline void set_error_code(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:protocols.common.SetGuildMemberTitleResponse)
 private:
  inline void set_has_error_code();
  inline void clear_has_error_code();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 error_code_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_game_5fguild_2eproto();
  friend void protobuf_AssignDesc_game_5fguild_2eproto();
  friend void protobuf_ShutdownFile_game_5fguild_2eproto();
  
  void InitAsDefaultInstance();
  static SetGuildMemberTitleResponse* default_instance_;
};
// -------------------------------------------------------------------

class SetGuildNoticeRequest : public ::google::protobuf::Message {
 public:
  SetGuildNoticeRequest();
  virtual ~SetGuildNoticeRequest();
  
  SetGuildNoticeRequest(const SetGuildNoticeRequest& from);
  
  inline SetGuildNoticeRequest& operator=(const SetGuildNoticeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetGuildNoticeRequest& default_instance();
  
  void Swap(SetGuildNoticeRequest* other);
  
  // implements Message ----------------------------------------------
  
  SetGuildNoticeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetGuildNoticeRequest& from);
  void MergeFrom(const SetGuildNoticeRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string content = 1;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 1;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  
  // @@protoc_insertion_point(class_scope:protocols.common.SetGuildNoticeRequest)
 private:
  inline void set_has_content();
  inline void clear_has_content();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* content_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_game_5fguild_2eproto();
  friend void protobuf_AssignDesc_game_5fguild_2eproto();
  friend void protobuf_ShutdownFile_game_5fguild_2eproto();
  
  void InitAsDefaultInstance();
  static SetGuildNoticeRequest* default_instance_;
};
// -------------------------------------------------------------------

class SetGuildNoticeResponse : public ::google::protobuf::Message {
 public:
  SetGuildNoticeResponse();
  virtual ~SetGuildNoticeResponse();
  
  SetGuildNoticeResponse(const SetGuildNoticeResponse& from);
  
  inline SetGuildNoticeResponse& operator=(const SetGuildNoticeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetGuildNoticeResponse& default_instance();
  
  void Swap(SetGuildNoticeResponse* other);
  
  // implements Message ----------------------------------------------
  
  SetGuildNoticeResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetGuildNoticeResponse& from);
  void MergeFrom(const SetGuildNoticeResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::google::protobuf::int32 error_code() const;
  inline void set_error_code(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:protocols.common.SetGuildNoticeResponse)
 private:
  inline void set_has_error_code();
  inline void clear_has_error_code();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 error_code_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_game_5fguild_2eproto();
  friend void protobuf_AssignDesc_game_5fguild_2eproto();
  friend void protobuf_ShutdownFile_game_5fguild_2eproto();
  
  void InitAsDefaultInstance();
  static SetGuildNoticeResponse* default_instance_;
};
// -------------------------------------------------------------------

class EnterGuildMapRequest : public ::google::protobuf::Message {
 public:
  EnterGuildMapRequest();
  virtual ~EnterGuildMapRequest();
  
  EnterGuildMapRequest(const EnterGuildMapRequest& from);
  
  inline EnterGuildMapRequest& operator=(const EnterGuildMapRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterGuildMapRequest& default_instance();
  
  void Swap(EnterGuildMapRequest* other);
  
  // implements Message ----------------------------------------------
  
  EnterGuildMapRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnterGuildMapRequest& from);
  void MergeFrom(const EnterGuildMapRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 npc_id = 1 [default = 0];
  inline bool has_npc_id() const;
  inline void clear_npc_id();
  static const int kNpcIdFieldNumber = 1;
  inline ::google::protobuf::int32 npc_id() const;
  inline void set_npc_id(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:protocols.common.EnterGuildMapRequest)
 private:
  inline void set_has_npc_id();
  inline void clear_has_npc_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 npc_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_game_5fguild_2eproto();
  friend void protobuf_AssignDesc_game_5fguild_2eproto();
  friend void protobuf_ShutdownFile_game_5fguild_2eproto();
  
  void InitAsDefaultInstance();
  static EnterGuildMapRequest* default_instance_;
};
// -------------------------------------------------------------------

class EnterGuildMapResponse : public ::google::protobuf::Message {
 public:
  EnterGuildMapResponse();
  virtual ~EnterGuildMapResponse();
  
  EnterGuildMapResponse(const EnterGuildMapResponse& from);
  
  inline EnterGuildMapResponse& operator=(const EnterGuildMapResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterGuildMapResponse& default_instance();
  
  void Swap(EnterGuildMapResponse* other);
  
  // implements Message ----------------------------------------------
  
  EnterGuildMapResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnterGuildMapResponse& from);
  void MergeFrom(const EnterGuildMapResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::google::protobuf::int32 error_code() const;
  inline void set_error_code(::google::protobuf::int32 value);
  
  // optional int32 map_id = 3 [default = 0];
  inline bool has_map_id() const;
  inline void clear_map_id();
  static const int kMapIdFieldNumber = 3;
  inline ::google::protobuf::int32 map_id() const;
  inline void set_map_id(::google::protobuf::int32 value);
  
  // optional int32 map_x = 4 [default = 0];
  inline bool has_map_x() const;
  inline void clear_map_x();
  static const int kMapXFieldNumber = 4;
  inline ::google::protobuf::int32 map_x() const;
  inline void set_map_x(::google::protobuf::int32 value);
  
  // optional int32 map_y = 5 [default = 0];
  inline bool has_map_y() const;
  inline void clear_map_y();
  static const int kMapYFieldNumber = 5;
  inline ::google::protobuf::int32 map_y() const;
  inline void set_map_y(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:protocols.common.EnterGuildMapResponse)
 private:
  inline void set_has_error_code();
  inline void clear_has_error_code();
  inline void set_has_map_id();
  inline void clear_has_map_id();
  inline void set_has_map_x();
  inline void clear_has_map_x();
  inline void set_has_map_y();
  inline void clear_has_map_y();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 error_code_;
  ::google::protobuf::int32 map_id_;
  ::google::protobuf::int32 map_x_;
  ::google::protobuf::int32 map_y_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_game_5fguild_2eproto();
  friend void protobuf_AssignDesc_game_5fguild_2eproto();
  friend void protobuf_ShutdownFile_game_5fguild_2eproto();
  
  void InitAsDefaultInstance();
  static EnterGuildMapResponse* default_instance_;
};
// -------------------------------------------------------------------

class LeaveGuildMapRequest : public ::google::protobuf::Message {
 public:
  LeaveGuildMapRequest();
  virtual ~LeaveGuildMapRequest();
  
  LeaveGuildMapRequest(const LeaveGuildMapRequest& from);
  
  inline LeaveGuildMapRequest& operator=(const LeaveGuildMapRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const LeaveGuildMapRequest& default_instance();
  
  void Swap(LeaveGuildMapRequest* other);
  
  // implements Message ----------------------------------------------
  
  LeaveGuildMapRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LeaveGuildMapRequest& from);
  void MergeFrom(const LeaveGuildMapRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:protocols.common.LeaveGuildMapRequest)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_game_5fguild_2eproto();
  friend void protobuf_AssignDesc_game_5fguild_2eproto();
  friend void protobuf_ShutdownFile_game_5fguild_2eproto();
  
  void InitAsDefaultInstance();
  static LeaveGuildMapRequest* default_instance_;
};
// -------------------------------------------------------------------

class LeaveGuildMapResponse : public ::google::protobuf::Message {
 public:
  LeaveGuildMapResponse();
  virtual ~LeaveGuildMapResponse();
  
  LeaveGuildMapResponse(const LeaveGuildMapResponse& from);
  
  inline LeaveGuildMapResponse& operator=(const LeaveGuildMapResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const LeaveGuildMapResponse& default_instance();
  
  void Swap(LeaveGuildMapResponse* other);
  
  // implements Message ----------------------------------------------
  
  LeaveGuildMapResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LeaveGuildMapResponse& from);
  void MergeFrom(const LeaveGuildMapResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 error_code = 1;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  inline ::google::protobuf::int32 error_code() const;
  inline void set_error_code(::google::protobuf::int32 value);
  
  // optional int32 map_id = 3 [default = 0];
  inline bool has_map_id() const;
  inline void clear_map_id();
  static const int kMapIdFieldNumber = 3;
  inline ::google::protobuf::int32 map_id() const;
  inline void set_map_id(::google::protobuf::int32 value);
  
  // optional int32 map_x = 4 [default = 0];
  inline bool has_map_x() const;
  inline void clear_map_x();
  static const int kMapXFieldNumber = 4;
  inline ::google::protobuf::int32 map_x() const;
  inline void set_map_x(::google::protobuf::int32 value);
  
  // optional int32 map_y = 5 [default = 0];
  inline bool has_map_y() const;
  inline void clear_map_y();
  static const int kMapYFieldNumber = 5;
  inline ::google::protobuf::int32 map_y() const;
  inline void set_map_y(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:protocols.common.LeaveGuildMapResponse)
 private:
  inline void set_has_error_code();
  inline void clear_has_error_code();
  inline void set_has_map_id();
  inline void clear_has_map_id();
  inline void set_has_map_x();
  inline void clear_has_map_x();
  inline void set_has_map_y();
  inline void clear_has_map_y();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 error_code_;
  ::google::protobuf::int32 map_id_;
  ::google::protobuf::int32 map_x_;
  ::google::protobuf::int32 map_y_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_game_5fguild_2eproto();
  friend void protobuf_AssignDesc_game_5fguild_2eproto();
  friend void protobuf_ShutdownFile_game_5fguild_2eproto();
  
  void InitAsDefaultInstance();
  static LeaveGuildMapResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// GuildInfo

// optional int32 guild_id = 1;
inline bool GuildInfo::has_guild_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildInfo::set_has_guild_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildInfo::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildInfo::clear_guild_id() {
  guild_id_ = 0;
  clear_has_guild_id();
}
inline ::google::protobuf::int32 GuildInfo::guild_id() const {
  return guild_id_;
}
inline void GuildInfo::set_guild_id(::google::protobuf::int32 value) {
  set_has_guild_id();
  guild_id_ = value;
}

// optional int32 grade = 2 [default = 1];
inline bool GuildInfo::has_grade() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildInfo::set_has_grade() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildInfo::clear_has_grade() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildInfo::clear_grade() {
  grade_ = 1;
  clear_has_grade();
}
inline ::google::protobuf::int32 GuildInfo::grade() const {
  return grade_;
}
inline void GuildInfo::set_grade(::google::protobuf::int32 value) {
  set_has_grade();
  grade_ = value;
}

// optional int32 total_member = 3;
inline bool GuildInfo::has_total_member() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildInfo::set_has_total_member() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildInfo::clear_has_total_member() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildInfo::clear_total_member() {
  total_member_ = 0;
  clear_has_total_member();
}
inline ::google::protobuf::int32 GuildInfo::total_member() const {
  return total_member_;
}
inline void GuildInfo::set_total_member(::google::protobuf::int32 value) {
  set_has_total_member();
  total_member_ = value;
}

// optional int32 online_member = 4 [default = 0];
inline bool GuildInfo::has_online_member() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildInfo::set_has_online_member() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildInfo::clear_has_online_member() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildInfo::clear_online_member() {
  online_member_ = 0;
  clear_has_online_member();
}
inline ::google::protobuf::int32 GuildInfo::online_member() const {
  return online_member_;
}
inline void GuildInfo::set_online_member(::google::protobuf::int32 value) {
  set_has_online_member();
  online_member_ = value;
}

// optional int64 leader_id = 5;
inline bool GuildInfo::has_leader_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildInfo::set_has_leader_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildInfo::clear_has_leader_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildInfo::clear_leader_id() {
  leader_id_ = GOOGLE_LONGLONG(0);
  clear_has_leader_id();
}
inline ::google::protobuf::int64 GuildInfo::leader_id() const {
  return leader_id_;
}
inline void GuildInfo::set_leader_id(::google::protobuf::int64 value) {
  set_has_leader_id();
  leader_id_ = value;
}

// optional string guild_name = 6;
inline bool GuildInfo::has_guild_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildInfo::set_has_guild_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildInfo::clear_has_guild_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildInfo::clear_guild_name() {
  if (guild_name_ != &::google::protobuf::internal::kEmptyString) {
    guild_name_->clear();
  }
  clear_has_guild_name();
}
inline const ::std::string& GuildInfo::guild_name() const {
  return *guild_name_;
}
inline void GuildInfo::set_guild_name(const ::std::string& value) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(value);
}
inline void GuildInfo::set_guild_name(const char* value) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(value);
}
inline void GuildInfo::set_guild_name(const char* value, size_t size) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildInfo::mutable_guild_name() {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    guild_name_ = new ::std::string;
  }
  return guild_name_;
}
inline ::std::string* GuildInfo::release_guild_name() {
  clear_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = guild_name_;
    guild_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string leader_name = 7;
inline bool GuildInfo::has_leader_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GuildInfo::set_has_leader_name() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GuildInfo::clear_has_leader_name() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GuildInfo::clear_leader_name() {
  if (leader_name_ != &::google::protobuf::internal::kEmptyString) {
    leader_name_->clear();
  }
  clear_has_leader_name();
}
inline const ::std::string& GuildInfo::leader_name() const {
  return *leader_name_;
}
inline void GuildInfo::set_leader_name(const ::std::string& value) {
  set_has_leader_name();
  if (leader_name_ == &::google::protobuf::internal::kEmptyString) {
    leader_name_ = new ::std::string;
  }
  leader_name_->assign(value);
}
inline void GuildInfo::set_leader_name(const char* value) {
  set_has_leader_name();
  if (leader_name_ == &::google::protobuf::internal::kEmptyString) {
    leader_name_ = new ::std::string;
  }
  leader_name_->assign(value);
}
inline void GuildInfo::set_leader_name(const char* value, size_t size) {
  set_has_leader_name();
  if (leader_name_ == &::google::protobuf::internal::kEmptyString) {
    leader_name_ = new ::std::string;
  }
  leader_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildInfo::mutable_leader_name() {
  set_has_leader_name();
  if (leader_name_ == &::google::protobuf::internal::kEmptyString) {
    leader_name_ = new ::std::string;
  }
  return leader_name_;
}
inline ::std::string* GuildInfo::release_leader_name() {
  clear_has_leader_name();
  if (leader_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = leader_name_;
    leader_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 max_member = 8;
inline bool GuildInfo::has_max_member() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GuildInfo::set_has_max_member() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GuildInfo::clear_has_max_member() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GuildInfo::clear_max_member() {
  max_member_ = 0;
  clear_has_max_member();
}
inline ::google::protobuf::int32 GuildInfo::max_member() const {
  return max_member_;
}
inline void GuildInfo::set_max_member(::google::protobuf::int32 value) {
  set_has_max_member();
  max_member_ = value;
}

// optional int32 self_status = 9;
inline bool GuildInfo::has_self_status() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GuildInfo::set_has_self_status() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GuildInfo::clear_has_self_status() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GuildInfo::clear_self_status() {
  self_status_ = 0;
  clear_has_self_status();
}
inline ::google::protobuf::int32 GuildInfo::self_status() const {
  return self_status_;
}
inline void GuildInfo::set_self_status(::google::protobuf::int32 value) {
  set_has_self_status();
  self_status_ = value;
}

// optional int32 rank = 10 [default = 0];
inline bool GuildInfo::has_rank() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GuildInfo::set_has_rank() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GuildInfo::clear_has_rank() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GuildInfo::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::google::protobuf::int32 GuildInfo::rank() const {
  return rank_;
}
inline void GuildInfo::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
}

// optional int32 leader_vip_level = 11 [default = 0];
inline bool GuildInfo::has_leader_vip_level() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GuildInfo::set_has_leader_vip_level() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GuildInfo::clear_has_leader_vip_level() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GuildInfo::clear_leader_vip_level() {
  leader_vip_level_ = 0;
  clear_has_leader_vip_level();
}
inline ::google::protobuf::int32 GuildInfo::leader_vip_level() const {
  return leader_vip_level_;
}
inline void GuildInfo::set_leader_vip_level(::google::protobuf::int32 value) {
  set_has_leader_vip_level();
  leader_vip_level_ = value;
}

// optional string notice = 12;
inline bool GuildInfo::has_notice() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GuildInfo::set_has_notice() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GuildInfo::clear_has_notice() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GuildInfo::clear_notice() {
  if (notice_ != &::google::protobuf::internal::kEmptyString) {
    notice_->clear();
  }
  clear_has_notice();
}
inline const ::std::string& GuildInfo::notice() const {
  return *notice_;
}
inline void GuildInfo::set_notice(const ::std::string& value) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
}
inline void GuildInfo::set_notice(const char* value) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
}
inline void GuildInfo::set_notice(const char* value, size_t size) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  notice_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildInfo::mutable_notice() {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  return notice_;
}
inline ::std::string* GuildInfo::release_notice() {
  clear_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = notice_;
    notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional .protocols.common.Gender leader_gender = 13 [default = MALE];
inline bool GuildInfo::has_leader_gender() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GuildInfo::set_has_leader_gender() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GuildInfo::clear_has_leader_gender() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GuildInfo::clear_leader_gender() {
  leader_gender_ = 1;
  clear_has_leader_gender();
}
inline protocols::common::Gender GuildInfo::leader_gender() const {
  return static_cast< protocols::common::Gender >(leader_gender_);
}
inline void GuildInfo::set_leader_gender(protocols::common::Gender value) {
  GOOGLE_DCHECK(protocols::common::Gender_IsValid(value));
  set_has_leader_gender();
  leader_gender_ = value;
}

// -------------------------------------------------------------------

// GuildMemberInfo

// required int64 member_guid = 1;
inline bool GuildMemberInfo::has_member_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMemberInfo::set_has_member_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMemberInfo::clear_has_member_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMemberInfo::clear_member_guid() {
  member_guid_ = GOOGLE_LONGLONG(0);
  clear_has_member_guid();
}
inline ::google::protobuf::int64 GuildMemberInfo::member_guid() const {
  return member_guid_;
}
inline void GuildMemberInfo::set_member_guid(::google::protobuf::int64 value) {
  set_has_member_guid();
  member_guid_ = value;
}

// optional int32 member_level = 2 [default = 1];
inline bool GuildMemberInfo::has_member_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMemberInfo::set_has_member_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMemberInfo::clear_has_member_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMemberInfo::clear_member_level() {
  member_level_ = 1;
  clear_has_member_level();
}
inline ::google::protobuf::int32 GuildMemberInfo::member_level() const {
  return member_level_;
}
inline void GuildMemberInfo::set_member_level(::google::protobuf::int32 value) {
  set_has_member_level();
  member_level_ = value;
}

// optional int32 devote = 3 [default = 0];
inline bool GuildMemberInfo::has_devote() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildMemberInfo::set_has_devote() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildMemberInfo::clear_has_devote() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildMemberInfo::clear_devote() {
  devote_ = 0;
  clear_has_devote();
}
inline ::google::protobuf::int32 GuildMemberInfo::devote() const {
  return devote_;
}
inline void GuildMemberInfo::set_devote(::google::protobuf::int32 value) {
  set_has_devote();
  devote_ = value;
}

// optional int32 title = 5 [default = 0];
inline bool GuildMemberInfo::has_title() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildMemberInfo::set_has_title() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildMemberInfo::clear_has_title() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildMemberInfo::clear_title() {
  title_ = 0;
  clear_has_title();
}
inline ::google::protobuf::int32 GuildMemberInfo::title() const {
  return title_;
}
inline void GuildMemberInfo::set_title(::google::protobuf::int32 value) {
  set_has_title();
  title_ = value;
}

// optional int32 job_type = 7;
inline bool GuildMemberInfo::has_job_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildMemberInfo::set_has_job_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildMemberInfo::clear_has_job_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildMemberInfo::clear_job_type() {
  job_type_ = 0;
  clear_has_job_type();
}
inline ::google::protobuf::int32 GuildMemberInfo::job_type() const {
  return job_type_;
}
inline void GuildMemberInfo::set_job_type(::google::protobuf::int32 value) {
  set_has_job_type();
  job_type_ = value;
}

// optional int32 status = 8;
inline bool GuildMemberInfo::has_status() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildMemberInfo::set_has_status() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildMemberInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildMemberInfo::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 GuildMemberInfo::status() const {
  return status_;
}
inline void GuildMemberInfo::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// optional bool online_flag = 6 [default = false];
inline bool GuildMemberInfo::has_online_flag() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GuildMemberInfo::set_has_online_flag() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GuildMemberInfo::clear_has_online_flag() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GuildMemberInfo::clear_online_flag() {
  online_flag_ = false;
  clear_has_online_flag();
}
inline bool GuildMemberInfo::online_flag() const {
  return online_flag_;
}
inline void GuildMemberInfo::set_online_flag(bool value) {
  set_has_online_flag();
  online_flag_ = value;
}

// optional string name = 4;
inline bool GuildMemberInfo::has_name() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GuildMemberInfo::set_has_name() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GuildMemberInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GuildMemberInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GuildMemberInfo::name() const {
  return *name_;
}
inline void GuildMemberInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GuildMemberInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GuildMemberInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildMemberInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* GuildMemberInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 vip_level = 9 [default = 0];
inline bool GuildMemberInfo::has_vip_level() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GuildMemberInfo::set_has_vip_level() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GuildMemberInfo::clear_has_vip_level() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GuildMemberInfo::clear_vip_level() {
  vip_level_ = 0;
  clear_has_vip_level();
}
inline ::google::protobuf::int32 GuildMemberInfo::vip_level() const {
  return vip_level_;
}
inline void GuildMemberInfo::set_vip_level(::google::protobuf::int32 value) {
  set_has_vip_level();
  vip_level_ = value;
}

// optional int32 server_id = 10 [default = 0];
inline bool GuildMemberInfo::has_server_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GuildMemberInfo::set_has_server_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GuildMemberInfo::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GuildMemberInfo::clear_server_id() {
  server_id_ = 0;
  clear_has_server_id();
}
inline ::google::protobuf::int32 GuildMemberInfo::server_id() const {
  return server_id_;
}
inline void GuildMemberInfo::set_server_id(::google::protobuf::int32 value) {
  set_has_server_id();
  server_id_ = value;
}

// optional int32 login_time = 11 [default = 0];
inline bool GuildMemberInfo::has_login_time() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GuildMemberInfo::set_has_login_time() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GuildMemberInfo::clear_has_login_time() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GuildMemberInfo::clear_login_time() {
  login_time_ = 0;
  clear_has_login_time();
}
inline ::google::protobuf::int32 GuildMemberInfo::login_time() const {
  return login_time_;
}
inline void GuildMemberInfo::set_login_time(::google::protobuf::int32 value) {
  set_has_login_time();
  login_time_ = value;
}

// optional .protocols.common.Gender gender = 12 [default = MALE];
inline bool GuildMemberInfo::has_gender() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GuildMemberInfo::set_has_gender() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GuildMemberInfo::clear_has_gender() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GuildMemberInfo::clear_gender() {
  gender_ = 1;
  clear_has_gender();
}
inline protocols::common::Gender GuildMemberInfo::gender() const {
  return static_cast< protocols::common::Gender >(gender_);
}
inline void GuildMemberInfo::set_gender(protocols::common::Gender value) {
  GOOGLE_DCHECK(protocols::common::Gender_IsValid(value));
  set_has_gender();
  gender_ = value;
}

// -------------------------------------------------------------------

// GuildDetail

// optional .protocols.common.GuildInfo info = 1;
inline bool GuildDetail::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildDetail::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildDetail::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildDetail::clear_info() {
  if (info_ != NULL) info_->::protocols::common::GuildInfo::Clear();
  clear_has_info();
}
inline const ::protocols::common::GuildInfo& GuildDetail::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::protocols::common::GuildInfo* GuildDetail::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::protocols::common::GuildInfo;
  return info_;
}
inline ::protocols::common::GuildInfo* GuildDetail::release_info() {
  clear_has_info();
  ::protocols::common::GuildInfo* temp = info_;
  info_ = NULL;
  return temp;
}

// optional int32 money = 2 [default = 0];
inline bool GuildDetail::has_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildDetail::set_has_money() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildDetail::clear_has_money() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildDetail::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline ::google::protobuf::int32 GuildDetail::money() const {
  return money_;
}
inline void GuildDetail::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
}

// optional int32 exp = 3 [default = 0];
inline bool GuildDetail::has_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildDetail::set_has_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildDetail::clear_has_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildDetail::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 GuildDetail::exp() const {
  return exp_;
}
inline void GuildDetail::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// optional int32 fee = 5;
inline bool GuildDetail::has_fee() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildDetail::set_has_fee() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildDetail::clear_has_fee() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildDetail::clear_fee() {
  fee_ = 0;
  clear_has_fee();
}
inline ::google::protobuf::int32 GuildDetail::fee() const {
  return fee_;
}
inline void GuildDetail::set_fee(::google::protobuf::int32 value) {
  set_has_fee();
  fee_ = value;
}

// optional string notice = 6;
inline bool GuildDetail::has_notice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildDetail::set_has_notice() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildDetail::clear_has_notice() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildDetail::clear_notice() {
  if (notice_ != &::google::protobuf::internal::kEmptyString) {
    notice_->clear();
  }
  clear_has_notice();
}
inline const ::std::string& GuildDetail::notice() const {
  return *notice_;
}
inline void GuildDetail::set_notice(const ::std::string& value) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
}
inline void GuildDetail::set_notice(const char* value) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
}
inline void GuildDetail::set_notice(const char* value, size_t size) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  notice_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildDetail::mutable_notice() {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  return notice_;
}
inline ::std::string* GuildDetail::release_notice() {
  clear_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = notice_;
    notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated .protocols.common.GuildMemberInfo member_list = 4;
inline int GuildDetail::member_list_size() const {
  return member_list_.size();
}
inline void GuildDetail::clear_member_list() {
  member_list_.Clear();
}
inline const ::protocols::common::GuildMemberInfo& GuildDetail::member_list(int index) const {
  return member_list_.Get(index);
}
inline ::protocols::common::GuildMemberInfo* GuildDetail::mutable_member_list(int index) {
  return member_list_.Mutable(index);
}
inline ::protocols::common::GuildMemberInfo* GuildDetail::add_member_list() {
  return member_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocols::common::GuildMemberInfo >&
GuildDetail::member_list() const {
  return member_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::protocols::common::GuildMemberInfo >*
GuildDetail::mutable_member_list() {
  return &member_list_;
}

// -------------------------------------------------------------------

// GuildInviteInfo

// optional int64 member_guid = 1;
inline bool GuildInviteInfo::has_member_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildInviteInfo::set_has_member_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildInviteInfo::clear_has_member_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildInviteInfo::clear_member_guid() {
  member_guid_ = GOOGLE_LONGLONG(0);
  clear_has_member_guid();
}
inline ::google::protobuf::int64 GuildInviteInfo::member_guid() const {
  return member_guid_;
}
inline void GuildInviteInfo::set_member_guid(::google::protobuf::int64 value) {
  set_has_member_guid();
  member_guid_ = value;
}

// optional string member_name = 2;
inline bool GuildInviteInfo::has_member_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildInviteInfo::set_has_member_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildInviteInfo::clear_has_member_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildInviteInfo::clear_member_name() {
  if (member_name_ != &::google::protobuf::internal::kEmptyString) {
    member_name_->clear();
  }
  clear_has_member_name();
}
inline const ::std::string& GuildInviteInfo::member_name() const {
  return *member_name_;
}
inline void GuildInviteInfo::set_member_name(const ::std::string& value) {
  set_has_member_name();
  if (member_name_ == &::google::protobuf::internal::kEmptyString) {
    member_name_ = new ::std::string;
  }
  member_name_->assign(value);
}
inline void GuildInviteInfo::set_member_name(const char* value) {
  set_has_member_name();
  if (member_name_ == &::google::protobuf::internal::kEmptyString) {
    member_name_ = new ::std::string;
  }
  member_name_->assign(value);
}
inline void GuildInviteInfo::set_member_name(const char* value, size_t size) {
  set_has_member_name();
  if (member_name_ == &::google::protobuf::internal::kEmptyString) {
    member_name_ = new ::std::string;
  }
  member_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildInviteInfo::mutable_member_name() {
  set_has_member_name();
  if (member_name_ == &::google::protobuf::internal::kEmptyString) {
    member_name_ = new ::std::string;
  }
  return member_name_;
}
inline ::std::string* GuildInviteInfo::release_member_name() {
  clear_has_member_name();
  if (member_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = member_name_;
    member_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 guild_id = 3;
inline bool GuildInviteInfo::has_guild_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildInviteInfo::set_has_guild_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildInviteInfo::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildInviteInfo::clear_guild_id() {
  guild_id_ = 0;
  clear_has_guild_id();
}
inline ::google::protobuf::int32 GuildInviteInfo::guild_id() const {
  return guild_id_;
}
inline void GuildInviteInfo::set_guild_id(::google::protobuf::int32 value) {
  set_has_guild_id();
  guild_id_ = value;
}

// optional int32 server_id = 5;
inline bool GuildInviteInfo::has_server_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildInviteInfo::set_has_server_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildInviteInfo::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildInviteInfo::clear_server_id() {
  server_id_ = 0;
  clear_has_server_id();
}
inline ::google::protobuf::int32 GuildInviteInfo::server_id() const {
  return server_id_;
}
inline void GuildInviteInfo::set_server_id(::google::protobuf::int32 value) {
  set_has_server_id();
  server_id_ = value;
}

// optional string guild_name = 4;
inline bool GuildInviteInfo::has_guild_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildInviteInfo::set_has_guild_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildInviteInfo::clear_has_guild_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildInviteInfo::clear_guild_name() {
  if (guild_name_ != &::google::protobuf::internal::kEmptyString) {
    guild_name_->clear();
  }
  clear_has_guild_name();
}
inline const ::std::string& GuildInviteInfo::guild_name() const {
  return *guild_name_;
}
inline void GuildInviteInfo::set_guild_name(const ::std::string& value) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(value);
}
inline void GuildInviteInfo::set_guild_name(const char* value) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(value);
}
inline void GuildInviteInfo::set_guild_name(const char* value, size_t size) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildInviteInfo::mutable_guild_name() {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    guild_name_ = new ::std::string;
  }
  return guild_name_;
}
inline ::std::string* GuildInviteInfo::release_guild_name() {
  clear_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = guild_name_;
    guild_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 member_level = 6;
inline bool GuildInviteInfo::has_member_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildInviteInfo::set_has_member_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildInviteInfo::clear_has_member_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildInviteInfo::clear_member_level() {
  member_level_ = 0;
  clear_has_member_level();
}
inline ::google::protobuf::int32 GuildInviteInfo::member_level() const {
  return member_level_;
}
inline void GuildInviteInfo::set_member_level(::google::protobuf::int32 value) {
  set_has_member_level();
  member_level_ = value;
}

// optional int32 guild_grade = 7;
inline bool GuildInviteInfo::has_guild_grade() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GuildInviteInfo::set_has_guild_grade() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GuildInviteInfo::clear_has_guild_grade() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GuildInviteInfo::clear_guild_grade() {
  guild_grade_ = 0;
  clear_has_guild_grade();
}
inline ::google::protobuf::int32 GuildInviteInfo::guild_grade() const {
  return guild_grade_;
}
inline void GuildInviteInfo::set_guild_grade(::google::protobuf::int32 value) {
  set_has_guild_grade();
  guild_grade_ = value;
}

// optional .protocols.common.Gender gender = 8 [default = MALE];
inline bool GuildInviteInfo::has_gender() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GuildInviteInfo::set_has_gender() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GuildInviteInfo::clear_has_gender() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GuildInviteInfo::clear_gender() {
  gender_ = 1;
  clear_has_gender();
}
inline protocols::common::Gender GuildInviteInfo::gender() const {
  return static_cast< protocols::common::Gender >(gender_);
}
inline void GuildInviteInfo::set_gender(protocols::common::Gender value) {
  GOOGLE_DCHECK(protocols::common::Gender_IsValid(value));
  set_has_gender();
  gender_ = value;
}

// -------------------------------------------------------------------

// GuildApplyInfo

// optional int64 guid = 1;
inline bool GuildApplyInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildApplyInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildApplyInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildApplyInfo::clear_guid() {
  guid_ = GOOGLE_LONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::int64 GuildApplyInfo::guid() const {
  return guid_;
}
inline void GuildApplyInfo::set_guid(::google::protobuf::int64 value) {
  set_has_guid();
  guid_ = value;
}

// optional int32 fight_capacity = 2;
inline bool GuildApplyInfo::has_fight_capacity() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildApplyInfo::set_has_fight_capacity() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildApplyInfo::clear_has_fight_capacity() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildApplyInfo::clear_fight_capacity() {
  fight_capacity_ = 0;
  clear_has_fight_capacity();
}
inline ::google::protobuf::int32 GuildApplyInfo::fight_capacity() const {
  return fight_capacity_;
}
inline void GuildApplyInfo::set_fight_capacity(::google::protobuf::int32 value) {
  set_has_fight_capacity();
  fight_capacity_ = value;
}

// optional int32 job_type = 3;
inline bool GuildApplyInfo::has_job_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildApplyInfo::set_has_job_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildApplyInfo::clear_has_job_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildApplyInfo::clear_job_type() {
  job_type_ = 0;
  clear_has_job_type();
}
inline ::google::protobuf::int32 GuildApplyInfo::job_type() const {
  return job_type_;
}
inline void GuildApplyInfo::set_job_type(::google::protobuf::int32 value) {
  set_has_job_type();
  job_type_ = value;
}

// optional int32 role_level = 4;
inline bool GuildApplyInfo::has_role_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildApplyInfo::set_has_role_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildApplyInfo::clear_has_role_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildApplyInfo::clear_role_level() {
  role_level_ = 0;
  clear_has_role_level();
}
inline ::google::protobuf::int32 GuildApplyInfo::role_level() const {
  return role_level_;
}
inline void GuildApplyInfo::set_role_level(::google::protobuf::int32 value) {
  set_has_role_level();
  role_level_ = value;
}

// optional int32 vip_level = 5;
inline bool GuildApplyInfo::has_vip_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildApplyInfo::set_has_vip_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildApplyInfo::clear_has_vip_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildApplyInfo::clear_vip_level() {
  vip_level_ = 0;
  clear_has_vip_level();
}
inline ::google::protobuf::int32 GuildApplyInfo::vip_level() const {
  return vip_level_;
}
inline void GuildApplyInfo::set_vip_level(::google::protobuf::int32 value) {
  set_has_vip_level();
  vip_level_ = value;
}

// optional int32 server_id = 6;
inline bool GuildApplyInfo::has_server_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildApplyInfo::set_has_server_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildApplyInfo::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildApplyInfo::clear_server_id() {
  server_id_ = 0;
  clear_has_server_id();
}
inline ::google::protobuf::int32 GuildApplyInfo::server_id() const {
  return server_id_;
}
inline void GuildApplyInfo::set_server_id(::google::protobuf::int32 value) {
  set_has_server_id();
  server_id_ = value;
}

// optional string name = 7;
inline bool GuildApplyInfo::has_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GuildApplyInfo::set_has_name() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GuildApplyInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GuildApplyInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GuildApplyInfo::name() const {
  return *name_;
}
inline void GuildApplyInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GuildApplyInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GuildApplyInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildApplyInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* GuildApplyInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional .protocols.common.Gender gender = 8 [default = MALE];
inline bool GuildApplyInfo::has_gender() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GuildApplyInfo::set_has_gender() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GuildApplyInfo::clear_has_gender() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GuildApplyInfo::clear_gender() {
  gender_ = 1;
  clear_has_gender();
}
inline protocols::common::Gender GuildApplyInfo::gender() const {
  return static_cast< protocols::common::Gender >(gender_);
}
inline void GuildApplyInfo::set_gender(protocols::common::Gender value) {
  GOOGLE_DCHECK(protocols::common::Gender_IsValid(value));
  set_has_gender();
  gender_ = value;
}

// -------------------------------------------------------------------

// CreateGuildRequest

// optional string name = 1;
inline bool CreateGuildRequest::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateGuildRequest::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateGuildRequest::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateGuildRequest::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CreateGuildRequest::name() const {
  return *name_;
}
inline void CreateGuildRequest::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CreateGuildRequest::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CreateGuildRequest::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CreateGuildRequest::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CreateGuildRequest::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CreateGuildResponse

// required int32 error_code = 1;
inline bool CreateGuildResponse::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateGuildResponse::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateGuildResponse::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateGuildResponse::clear_error_code() {
  error_code_ = 0;
  clear_has_error_code();
}
inline ::google::protobuf::int32 CreateGuildResponse::error_code() const {
  return error_code_;
}
inline void CreateGuildResponse::set_error_code(::google::protobuf::int32 value) {
  set_has_error_code();
  error_code_ = value;
}

// optional .protocols.common.GuildDetail detail = 2;
inline bool CreateGuildResponse::has_detail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateGuildResponse::set_has_detail() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateGuildResponse::clear_has_detail() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateGuildResponse::clear_detail() {
  if (detail_ != NULL) detail_->::protocols::common::GuildDetail::Clear();
  clear_has_detail();
}
inline const ::protocols::common::GuildDetail& CreateGuildResponse::detail() const {
  return detail_ != NULL ? *detail_ : *default_instance_->detail_;
}
inline ::protocols::common::GuildDetail* CreateGuildResponse::mutable_detail() {
  set_has_detail();
  if (detail_ == NULL) detail_ = new ::protocols::common::GuildDetail;
  return detail_;
}
inline ::protocols::common::GuildDetail* CreateGuildResponse::release_detail() {
  clear_has_detail();
  ::protocols::common::GuildDetail* temp = detail_;
  detail_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// DeleteGuildRequest

// optional int32 guild_id = 1;
inline bool DeleteGuildRequest::has_guild_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteGuildRequest::set_has_guild_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteGuildRequest::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteGuildRequest::clear_guild_id() {
  guild_id_ = 0;
  clear_has_guild_id();
}
inline ::google::protobuf::int32 DeleteGuildRequest::guild_id() const {
  return guild_id_;
}
inline void DeleteGuildRequest::set_guild_id(::google::protobuf::int32 value) {
  set_has_guild_id();
  guild_id_ = value;
}

// -------------------------------------------------------------------

// DeleteGuildResponse

// required int32 error_code = 1;
inline bool DeleteGuildResponse::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteGuildResponse::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteGuildResponse::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteGuildResponse::clear_error_code() {
  error_code_ = 0;
  clear_has_error_code();
}
inline ::google::protobuf::int32 DeleteGuildResponse::error_code() const {
  return error_code_;
}
inline void DeleteGuildResponse::set_error_code(::google::protobuf::int32 value) {
  set_has_error_code();
  error_code_ = value;
}

// -------------------------------------------------------------------

// GetGuildListRequest

// optional int32 begin = 1;
inline bool GetGuildListRequest::has_begin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGuildListRequest::set_has_begin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGuildListRequest::clear_has_begin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGuildListRequest::clear_begin() {
  begin_ = 0;
  clear_has_begin();
}
inline ::google::protobuf::int32 GetGuildListRequest::begin() const {
  return begin_;
}
inline void GetGuildListRequest::set_begin(::google::protobuf::int32 value) {
  set_has_begin();
  begin_ = value;
}

// optional int32 count = 2;
inline bool GetGuildListRequest::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetGuildListRequest::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetGuildListRequest::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetGuildListRequest::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 GetGuildListRequest::count() const {
  return count_;
}
inline void GetGuildListRequest::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// GetGuildListResponse

// required int32 error_code = 1;
inline bool GetGuildListResponse::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGuildListResponse::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGuildListResponse::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGuildListResponse::clear_error_code() {
  error_code_ = 0;
  clear_has_error_code();
}
inline ::google::protobuf::int32 GetGuildListResponse::error_code() const {
  return error_code_;
}
inline void GetGuildListResponse::set_error_code(::google::protobuf::int32 value) {
  set_has_error_code();
  error_code_ = value;
}

// repeated .protocols.common.GuildInfo guild_list = 2;
inline int GetGuildListResponse::guild_list_size() const {
  return guild_list_.size();
}
inline void GetGuildListResponse::clear_guild_list() {
  guild_list_.Clear();
}
inline const ::protocols::common::GuildInfo& GetGuildListResponse::guild_list(int index) const {
  return guild_list_.Get(index);
}
inline ::protocols::common::GuildInfo* GetGuildListResponse::mutable_guild_list(int index) {
  return guild_list_.Mutable(index);
}
inline ::protocols::common::GuildInfo* GetGuildListResponse::add_guild_list() {
  return guild_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocols::common::GuildInfo >&
GetGuildListResponse::guild_list() const {
  return guild_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::protocols::common::GuildInfo >*
GetGuildListResponse::mutable_guild_list() {
  return &guild_list_;
}

// optional int32 total_count = 3;
inline bool GetGuildListResponse::has_total_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetGuildListResponse::set_has_total_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetGuildListResponse::clear_has_total_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetGuildListResponse::clear_total_count() {
  total_count_ = 0;
  clear_has_total_count();
}
inline ::google::protobuf::int32 GetGuildListResponse::total_count() const {
  return total_count_;
}
inline void GetGuildListResponse::set_total_count(::google::protobuf::int32 value) {
  set_has_total_count();
  total_count_ = value;
}

// -------------------------------------------------------------------

// GetGuildDetailRequest

// optional int32 guild_id = 1;
inline bool GetGuildDetailRequest::has_guild_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGuildDetailRequest::set_has_guild_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGuildDetailRequest::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGuildDetailRequest::clear_guild_id() {
  guild_id_ = 0;
  clear_has_guild_id();
}
inline ::google::protobuf::int32 GetGuildDetailRequest::guild_id() const {
  return guild_id_;
}
inline void GetGuildDetailRequest::set_guild_id(::google::protobuf::int32 value) {
  set_has_guild_id();
  guild_id_ = value;
}

// -------------------------------------------------------------------

// GetGuildDetailResponse

// required int32 error_code = 1;
inline bool GetGuildDetailResponse::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGuildDetailResponse::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGuildDetailResponse::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGuildDetailResponse::clear_error_code() {
  error_code_ = 0;
  clear_has_error_code();
}
inline ::google::protobuf::int32 GetGuildDetailResponse::error_code() const {
  return error_code_;
}
inline void GetGuildDetailResponse::set_error_code(::google::protobuf::int32 value) {
  set_has_error_code();
  error_code_ = value;
}

// optional .protocols.common.GuildDetail detail = 2;
inline bool GetGuildDetailResponse::has_detail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetGuildDetailResponse::set_has_detail() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetGuildDetailResponse::clear_has_detail() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetGuildDetailResponse::clear_detail() {
  if (detail_ != NULL) detail_->::protocols::common::GuildDetail::Clear();
  clear_has_detail();
}
inline const ::protocols::common::GuildDetail& GetGuildDetailResponse::detail() const {
  return detail_ != NULL ? *detail_ : *default_instance_->detail_;
}
inline ::protocols::common::GuildDetail* GetGuildDetailResponse::mutable_detail() {
  set_has_detail();
  if (detail_ == NULL) detail_ = new ::protocols::common::GuildDetail;
  return detail_;
}
inline ::protocols::common::GuildDetail* GetGuildDetailResponse::release_detail() {
  clear_has_detail();
  ::protocols::common::GuildDetail* temp = detail_;
  detail_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// GetGuildMemberListRequest

// optional int32 status = 1;
inline bool GetGuildMemberListRequest::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGuildMemberListRequest::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGuildMemberListRequest::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGuildMemberListRequest::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 GetGuildMemberListRequest::status() const {
  return status_;
}
inline void GetGuildMemberListRequest::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// GetGuildMemberListResponse

// required int32 error_code = 1;
inline bool GetGuildMemberListResponse::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGuildMemberListResponse::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGuildMemberListResponse::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGuildMemberListResponse::clear_error_code() {
  error_code_ = 0;
  clear_has_error_code();
}
inline ::google::protobuf::int32 GetGuildMemberListResponse::error_code() const {
  return error_code_;
}
inline void GetGuildMemberListResponse::set_error_code(::google::protobuf::int32 value) {
  set_has_error_code();
  error_code_ = value;
}

// repeated .protocols.common.GuildMemberInfo member_list = 2;
inline int GetGuildMemberListResponse::member_list_size() const {
  return member_list_.size();
}
inline void GetGuildMemberListResponse::clear_member_list() {
  member_list_.Clear();
}
inline const ::protocols::common::GuildMemberInfo& GetGuildMemberListResponse::member_list(int index) const {
  return member_list_.Get(index);
}
inline ::protocols::common::GuildMemberInfo* GetGuildMemberListResponse::mutable_member_list(int index) {
  return member_list_.Mutable(index);
}
inline ::protocols::common::GuildMemberInfo* GetGuildMemberListResponse::add_member_list() {
  return member_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocols::common::GuildMemberInfo >&
GetGuildMemberListResponse::member_list() const {
  return member_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::protocols::common::GuildMemberInfo >*
GetGuildMemberListResponse::mutable_member_list() {
  return &member_list_;
}

// -------------------------------------------------------------------

// ApplyJoinGuildRequest

// required int32 guild_id = 1;
inline bool ApplyJoinGuildRequest::has_guild_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ApplyJoinGuildRequest::set_has_guild_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ApplyJoinGuildRequest::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ApplyJoinGuildRequest::clear_guild_id() {
  guild_id_ = 0;
  clear_has_guild_id();
}
inline ::google::protobuf::int32 ApplyJoinGuildRequest::guild_id() const {
  return guild_id_;
}
inline void ApplyJoinGuildRequest::set_guild_id(::google::protobuf::int32 value) {
  set_has_guild_id();
  guild_id_ = value;
}

// optional bool apply_flag = 2 [default = true];
inline bool ApplyJoinGuildRequest::has_apply_flag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ApplyJoinGuildRequest::set_has_apply_flag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ApplyJoinGuildRequest::clear_has_apply_flag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ApplyJoinGuildRequest::clear_apply_flag() {
  apply_flag_ = true;
  clear_has_apply_flag();
}
inline bool ApplyJoinGuildRequest::apply_flag() const {
  return apply_flag_;
}
inline void ApplyJoinGuildRequest::set_apply_flag(bool value) {
  set_has_apply_flag();
  apply_flag_ = value;
}

// -------------------------------------------------------------------

// ApplyJoinGuildResponse

// required int32 error_code = 1;
inline bool ApplyJoinGuildResponse::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ApplyJoinGuildResponse::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ApplyJoinGuildResponse::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ApplyJoinGuildResponse::clear_error_code() {
  error_code_ = 0;
  clear_has_error_code();
}
inline ::google::protobuf::int32 ApplyJoinGuildResponse::error_code() const {
  return error_code_;
}
inline void ApplyJoinGuildResponse::set_error_code(::google::protobuf::int32 value) {
  set_has_error_code();
  error_code_ = value;
}

// -------------------------------------------------------------------

// AnswerJoinGuildRequest

// required int64 member_guid = 2;
inline bool AnswerJoinGuildRequest::has_member_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AnswerJoinGuildRequest::set_has_member_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AnswerJoinGuildRequest::clear_has_member_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AnswerJoinGuildRequest::clear_member_guid() {
  member_guid_ = GOOGLE_LONGLONG(0);
  clear_has_member_guid();
}
inline ::google::protobuf::int64 AnswerJoinGuildRequest::member_guid() const {
  return member_guid_;
}
inline void AnswerJoinGuildRequest::set_member_guid(::google::protobuf::int64 value) {
  set_has_member_guid();
  member_guid_ = value;
}

// required bool accept_flag = 3;
inline bool AnswerJoinGuildRequest::has_accept_flag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AnswerJoinGuildRequest::set_has_accept_flag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AnswerJoinGuildRequest::clear_has_accept_flag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AnswerJoinGuildRequest::clear_accept_flag() {
  accept_flag_ = false;
  clear_has_accept_flag();
}
inline bool AnswerJoinGuildRequest::accept_flag() const {
  return accept_flag_;
}
inline void AnswerJoinGuildRequest::set_accept_flag(bool value) {
  set_has_accept_flag();
  accept_flag_ = value;
}

// -------------------------------------------------------------------

// AnswerJoinGuildResponse

// required int32 error_code = 1;
inline bool AnswerJoinGuildResponse::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AnswerJoinGuildResponse::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AnswerJoinGuildResponse::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AnswerJoinGuildResponse::clear_error_code() {
  error_code_ = 0;
  clear_has_error_code();
}
inline ::google::protobuf::int32 AnswerJoinGuildResponse::error_code() const {
  return error_code_;
}
inline void AnswerJoinGuildResponse::set_error_code(::google::protobuf::int32 value) {
  set_has_error_code();
  error_code_ = value;
}

// -------------------------------------------------------------------

// AnswerJoinGuildNotify

// required int32 guild_id = 1;
inline bool AnswerJoinGuildNotify::has_guild_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AnswerJoinGuildNotify::set_has_guild_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AnswerJoinGuildNotify::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AnswerJoinGuildNotify::clear_guild_id() {
  guild_id_ = 0;
  clear_has_guild_id();
}
inline ::google::protobuf::int32 AnswerJoinGuildNotify::guild_id() const {
  return guild_id_;
}
inline void AnswerJoinGuildNotify::set_guild_id(::google::protobuf::int32 value) {
  set_has_guild_id();
  guild_id_ = value;
}

// required bool accept_flag = 2;
inline bool AnswerJoinGuildNotify::has_accept_flag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AnswerJoinGuildNotify::set_has_accept_flag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AnswerJoinGuildNotify::clear_has_accept_flag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AnswerJoinGuildNotify::clear_accept_flag() {
  accept_flag_ = false;
  clear_has_accept_flag();
}
inline bool AnswerJoinGuildNotify::accept_flag() const {
  return accept_flag_;
}
inline void AnswerJoinGuildNotify::set_accept_flag(bool value) {
  set_has_accept_flag();
  accept_flag_ = value;
}

// optional string guild_name = 3;
inline bool AnswerJoinGuildNotify::has_guild_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AnswerJoinGuildNotify::set_has_guild_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AnswerJoinGuildNotify::clear_has_guild_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AnswerJoinGuildNotify::clear_guild_name() {
  if (guild_name_ != &::google::protobuf::internal::kEmptyString) {
    guild_name_->clear();
  }
  clear_has_guild_name();
}
inline const ::std::string& AnswerJoinGuildNotify::guild_name() const {
  return *guild_name_;
}
inline void AnswerJoinGuildNotify::set_guild_name(const ::std::string& value) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(value);
}
inline void AnswerJoinGuildNotify::set_guild_name(const char* value) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(value);
}
inline void AnswerJoinGuildNotify::set_guild_name(const char* value, size_t size) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AnswerJoinGuildNotify::mutable_guild_name() {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    guild_name_ = new ::std::string;
  }
  return guild_name_;
}
inline ::std::string* AnswerJoinGuildNotify::release_guild_name() {
  clear_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = guild_name_;
    guild_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// InviteJoinGuildRequest

// required int64 member_guid = 1;
inline bool InviteJoinGuildRequest::has_member_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InviteJoinGuildRequest::set_has_member_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InviteJoinGuildRequest::clear_has_member_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InviteJoinGuildRequest::clear_member_guid() {
  member_guid_ = GOOGLE_LONGLONG(0);
  clear_has_member_guid();
}
inline ::google::protobuf::int64 InviteJoinGuildRequest::member_guid() const {
  return member_guid_;
}
inline void InviteJoinGuildRequest::set_member_guid(::google::protobuf::int64 value) {
  set_has_member_guid();
  member_guid_ = value;
}

// -------------------------------------------------------------------

// InviteJoinGuildResponse

// required int32 error_code = 1;
inline bool InviteJoinGuildResponse::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InviteJoinGuildResponse::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InviteJoinGuildResponse::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InviteJoinGuildResponse::clear_error_code() {
  error_code_ = 0;
  clear_has_error_code();
}
inline ::google::protobuf::int32 InviteJoinGuildResponse::error_code() const {
  return error_code_;
}
inline void InviteJoinGuildResponse::set_error_code(::google::protobuf::int32 value) {
  set_has_error_code();
  error_code_ = value;
}

// -------------------------------------------------------------------

// InviteJoinGuildNotify

// optional int64 member_guid = 1;
inline bool InviteJoinGuildNotify::has_member_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InviteJoinGuildNotify::set_has_member_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InviteJoinGuildNotify::clear_has_member_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InviteJoinGuildNotify::clear_member_guid() {
  member_guid_ = GOOGLE_LONGLONG(0);
  clear_has_member_guid();
}
inline ::google::protobuf::int64 InviteJoinGuildNotify::member_guid() const {
  return member_guid_;
}
inline void InviteJoinGuildNotify::set_member_guid(::google::protobuf::int64 value) {
  set_has_member_guid();
  member_guid_ = value;
}

// optional string member_name = 2;
inline bool InviteJoinGuildNotify::has_member_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InviteJoinGuildNotify::set_has_member_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InviteJoinGuildNotify::clear_has_member_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InviteJoinGuildNotify::clear_member_name() {
  if (member_name_ != &::google::protobuf::internal::kEmptyString) {
    member_name_->clear();
  }
  clear_has_member_name();
}
inline const ::std::string& InviteJoinGuildNotify::member_name() const {
  return *member_name_;
}
inline void InviteJoinGuildNotify::set_member_name(const ::std::string& value) {
  set_has_member_name();
  if (member_name_ == &::google::protobuf::internal::kEmptyString) {
    member_name_ = new ::std::string;
  }
  member_name_->assign(value);
}
inline void InviteJoinGuildNotify::set_member_name(const char* value) {
  set_has_member_name();
  if (member_name_ == &::google::protobuf::internal::kEmptyString) {
    member_name_ = new ::std::string;
  }
  member_name_->assign(value);
}
inline void InviteJoinGuildNotify::set_member_name(const char* value, size_t size) {
  set_has_member_name();
  if (member_name_ == &::google::protobuf::internal::kEmptyString) {
    member_name_ = new ::std::string;
  }
  member_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* InviteJoinGuildNotify::mutable_member_name() {
  set_has_member_name();
  if (member_name_ == &::google::protobuf::internal::kEmptyString) {
    member_name_ = new ::std::string;
  }
  return member_name_;
}
inline ::std::string* InviteJoinGuildNotify::release_member_name() {
  clear_has_member_name();
  if (member_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = member_name_;
    member_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 guild_id = 3;
inline bool InviteJoinGuildNotify::has_guild_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InviteJoinGuildNotify::set_has_guild_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InviteJoinGuildNotify::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InviteJoinGuildNotify::clear_guild_id() {
  guild_id_ = 0;
  clear_has_guild_id();
}
inline ::google::protobuf::int32 InviteJoinGuildNotify::guild_id() const {
  return guild_id_;
}
inline void InviteJoinGuildNotify::set_guild_id(::google::protobuf::int32 value) {
  set_has_guild_id();
  guild_id_ = value;
}

// optional int32 server_id = 5;
inline bool InviteJoinGuildNotify::has_server_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InviteJoinGuildNotify::set_has_server_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void InviteJoinGuildNotify::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void InviteJoinGuildNotify::clear_server_id() {
  server_id_ = 0;
  clear_has_server_id();
}
inline ::google::protobuf::int32 InviteJoinGuildNotify::server_id() const {
  return server_id_;
}
inline void InviteJoinGuildNotify::set_server_id(::google::protobuf::int32 value) {
  set_has_server_id();
  server_id_ = value;
}

// optional string guild_name = 4;
inline bool InviteJoinGuildNotify::has_guild_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void InviteJoinGuildNotify::set_has_guild_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void InviteJoinGuildNotify::clear_has_guild_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void InviteJoinGuildNotify::clear_guild_name() {
  if (guild_name_ != &::google::protobuf::internal::kEmptyString) {
    guild_name_->clear();
  }
  clear_has_guild_name();
}
inline const ::std::string& InviteJoinGuildNotify::guild_name() const {
  return *guild_name_;
}
inline void InviteJoinGuildNotify::set_guild_name(const ::std::string& value) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(value);
}
inline void InviteJoinGuildNotify::set_guild_name(const char* value) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(value);
}
inline void InviteJoinGuildNotify::set_guild_name(const char* value, size_t size) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* InviteJoinGuildNotify::mutable_guild_name() {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    guild_name_ = new ::std::string;
  }
  return guild_name_;
}
inline ::std::string* InviteJoinGuildNotify::release_guild_name() {
  clear_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = guild_name_;
    guild_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 member_level = 6;
inline bool InviteJoinGuildNotify::has_member_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void InviteJoinGuildNotify::set_has_member_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void InviteJoinGuildNotify::clear_has_member_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void InviteJoinGuildNotify::clear_member_level() {
  member_level_ = 0;
  clear_has_member_level();
}
inline ::google::protobuf::int32 InviteJoinGuildNotify::member_level() const {
  return member_level_;
}
inline void InviteJoinGuildNotify::set_member_level(::google::protobuf::int32 value) {
  set_has_member_level();
  member_level_ = value;
}

// optional int32 guild_grade = 7;
inline bool InviteJoinGuildNotify::has_guild_grade() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void InviteJoinGuildNotify::set_has_guild_grade() {
  _has_bits_[0] |= 0x00000040u;
}
inline void InviteJoinGuildNotify::clear_has_guild_grade() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void InviteJoinGuildNotify::clear_guild_grade() {
  guild_grade_ = 0;
  clear_has_guild_grade();
}
inline ::google::protobuf::int32 InviteJoinGuildNotify::guild_grade() const {
  return guild_grade_;
}
inline void InviteJoinGuildNotify::set_guild_grade(::google::protobuf::int32 value) {
  set_has_guild_grade();
  guild_grade_ = value;
}

// -------------------------------------------------------------------

// GetGuildInviteListRequest

// -------------------------------------------------------------------

// GetGuildInviteListResponse

// required int32 error_code = 1;
inline bool GetGuildInviteListResponse::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGuildInviteListResponse::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGuildInviteListResponse::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGuildInviteListResponse::clear_error_code() {
  error_code_ = 0;
  clear_has_error_code();
}
inline ::google::protobuf::int32 GetGuildInviteListResponse::error_code() const {
  return error_code_;
}
inline void GetGuildInviteListResponse::set_error_code(::google::protobuf::int32 value) {
  set_has_error_code();
  error_code_ = value;
}

// repeated .protocols.common.GuildInviteInfo invite_list = 2;
inline int GetGuildInviteListResponse::invite_list_size() const {
  return invite_list_.size();
}
inline void GetGuildInviteListResponse::clear_invite_list() {
  invite_list_.Clear();
}
inline const ::protocols::common::GuildInviteInfo& GetGuildInviteListResponse::invite_list(int index) const {
  return invite_list_.Get(index);
}
inline ::protocols::common::GuildInviteInfo* GetGuildInviteListResponse::mutable_invite_list(int index) {
  return invite_list_.Mutable(index);
}
inline ::protocols::common::GuildInviteInfo* GetGuildInviteListResponse::add_invite_list() {
  return invite_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocols::common::GuildInviteInfo >&
GetGuildInviteListResponse::invite_list() const {
  return invite_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::protocols::common::GuildInviteInfo >*
GetGuildInviteListResponse::mutable_invite_list() {
  return &invite_list_;
}

// -------------------------------------------------------------------

// GetGuildApplyListRequest

// optional int32 guild_id = 1;
inline bool GetGuildApplyListRequest::has_guild_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGuildApplyListRequest::set_has_guild_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGuildApplyListRequest::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGuildApplyListRequest::clear_guild_id() {
  guild_id_ = 0;
  clear_has_guild_id();
}
inline ::google::protobuf::int32 GetGuildApplyListRequest::guild_id() const {
  return guild_id_;
}
inline void GetGuildApplyListRequest::set_guild_id(::google::protobuf::int32 value) {
  set_has_guild_id();
  guild_id_ = value;
}

// -------------------------------------------------------------------

// GetGuildApplyListResponse

// required int32 error_code = 1;
inline bool GetGuildApplyListResponse::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGuildApplyListResponse::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGuildApplyListResponse::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGuildApplyListResponse::clear_error_code() {
  error_code_ = 0;
  clear_has_error_code();
}
inline ::google::protobuf::int32 GetGuildApplyListResponse::error_code() const {
  return error_code_;
}
inline void GetGuildApplyListResponse::set_error_code(::google::protobuf::int32 value) {
  set_has_error_code();
  error_code_ = value;
}

// repeated .protocols.common.GuildApplyInfo apply_list = 2;
inline int GetGuildApplyListResponse::apply_list_size() const {
  return apply_list_.size();
}
inline void GetGuildApplyListResponse::clear_apply_list() {
  apply_list_.Clear();
}
inline const ::protocols::common::GuildApplyInfo& GetGuildApplyListResponse::apply_list(int index) const {
  return apply_list_.Get(index);
}
inline ::protocols::common::GuildApplyInfo* GetGuildApplyListResponse::mutable_apply_list(int index) {
  return apply_list_.Mutable(index);
}
inline ::protocols::common::GuildApplyInfo* GetGuildApplyListResponse::add_apply_list() {
  return apply_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocols::common::GuildApplyInfo >&
GetGuildApplyListResponse::apply_list() const {
  return apply_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::protocols::common::GuildApplyInfo >*
GetGuildApplyListResponse::mutable_apply_list() {
  return &apply_list_;
}

// -------------------------------------------------------------------

// GuildMemberNotify

// optional .protocols.common.GuildMemberInfo member_info = 1;
inline bool GuildMemberNotify::has_member_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMemberNotify::set_has_member_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMemberNotify::clear_has_member_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMemberNotify::clear_member_info() {
  if (member_info_ != NULL) member_info_->::protocols::common::GuildMemberInfo::Clear();
  clear_has_member_info();
}
inline const ::protocols::common::GuildMemberInfo& GuildMemberNotify::member_info() const {
  return member_info_ != NULL ? *member_info_ : *default_instance_->member_info_;
}
inline ::protocols::common::GuildMemberInfo* GuildMemberNotify::mutable_member_info() {
  set_has_member_info();
  if (member_info_ == NULL) member_info_ = new ::protocols::common::GuildMemberInfo;
  return member_info_;
}
inline ::protocols::common::GuildMemberInfo* GuildMemberNotify::release_member_info() {
  clear_has_member_info();
  ::protocols::common::GuildMemberInfo* temp = member_info_;
  member_info_ = NULL;
  return temp;
}

// optional int32 status = 2;
inline bool GuildMemberNotify::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMemberNotify::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMemberNotify::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMemberNotify::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 GuildMemberNotify::status() const {
  return status_;
}
inline void GuildMemberNotify::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// required int32 guild_id = 3;
inline bool GuildMemberNotify::has_guild_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildMemberNotify::set_has_guild_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildMemberNotify::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildMemberNotify::clear_guild_id() {
  guild_id_ = 0;
  clear_has_guild_id();
}
inline ::google::protobuf::int32 GuildMemberNotify::guild_id() const {
  return guild_id_;
}
inline void GuildMemberNotify::set_guild_id(::google::protobuf::int32 value) {
  set_has_guild_id();
  guild_id_ = value;
}

// optional string guild_name = 4;
inline bool GuildMemberNotify::has_guild_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildMemberNotify::set_has_guild_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildMemberNotify::clear_has_guild_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildMemberNotify::clear_guild_name() {
  if (guild_name_ != &::google::protobuf::internal::kEmptyString) {
    guild_name_->clear();
  }
  clear_has_guild_name();
}
inline const ::std::string& GuildMemberNotify::guild_name() const {
  return *guild_name_;
}
inline void GuildMemberNotify::set_guild_name(const ::std::string& value) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(value);
}
inline void GuildMemberNotify::set_guild_name(const char* value) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(value);
}
inline void GuildMemberNotify::set_guild_name(const char* value, size_t size) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildMemberNotify::mutable_guild_name() {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    guild_name_ = new ::std::string;
  }
  return guild_name_;
}
inline ::std::string* GuildMemberNotify::release_guild_name() {
  clear_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = guild_name_;
    guild_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// GuildTitleNotify

// optional int64 member_guid = 1;
inline bool GuildTitleNotify::has_member_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildTitleNotify::set_has_member_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildTitleNotify::clear_has_member_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildTitleNotify::clear_member_guid() {
  member_guid_ = GOOGLE_LONGLONG(0);
  clear_has_member_guid();
}
inline ::google::protobuf::int64 GuildTitleNotify::member_guid() const {
  return member_guid_;
}
inline void GuildTitleNotify::set_member_guid(::google::protobuf::int64 value) {
  set_has_member_guid();
  member_guid_ = value;
}

// optional int32 title = 2;
inline bool GuildTitleNotify::has_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildTitleNotify::set_has_title() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildTitleNotify::clear_has_title() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildTitleNotify::clear_title() {
  title_ = 0;
  clear_has_title();
}
inline ::google::protobuf::int32 GuildTitleNotify::title() const {
  return title_;
}
inline void GuildTitleNotify::set_title(::google::protobuf::int32 value) {
  set_has_title();
  title_ = value;
}

// optional int32 guild_id = 3;
inline bool GuildTitleNotify::has_guild_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildTitleNotify::set_has_guild_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildTitleNotify::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildTitleNotify::clear_guild_id() {
  guild_id_ = 0;
  clear_has_guild_id();
}
inline ::google::protobuf::int32 GuildTitleNotify::guild_id() const {
  return guild_id_;
}
inline void GuildTitleNotify::set_guild_id(::google::protobuf::int32 value) {
  set_has_guild_id();
  guild_id_ = value;
}

// -------------------------------------------------------------------

// ReplyJoinGuildRequest

// required int32 guild_id = 1;
inline bool ReplyJoinGuildRequest::has_guild_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyJoinGuildRequest::set_has_guild_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyJoinGuildRequest::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyJoinGuildRequest::clear_guild_id() {
  guild_id_ = 0;
  clear_has_guild_id();
}
inline ::google::protobuf::int32 ReplyJoinGuildRequest::guild_id() const {
  return guild_id_;
}
inline void ReplyJoinGuildRequest::set_guild_id(::google::protobuf::int32 value) {
  set_has_guild_id();
  guild_id_ = value;
}

// optional bool accept_flag = 2 [default = true];
inline bool ReplyJoinGuildRequest::has_accept_flag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReplyJoinGuildRequest::set_has_accept_flag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReplyJoinGuildRequest::clear_has_accept_flag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReplyJoinGuildRequest::clear_accept_flag() {
  accept_flag_ = true;
  clear_has_accept_flag();
}
inline bool ReplyJoinGuildRequest::accept_flag() const {
  return accept_flag_;
}
inline void ReplyJoinGuildRequest::set_accept_flag(bool value) {
  set_has_accept_flag();
  accept_flag_ = value;
}

// -------------------------------------------------------------------

// ReplyJoinGuildResponse

// required int32 error_code = 1;
inline bool ReplyJoinGuildResponse::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReplyJoinGuildResponse::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReplyJoinGuildResponse::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReplyJoinGuildResponse::clear_error_code() {
  error_code_ = 0;
  clear_has_error_code();
}
inline ::google::protobuf::int32 ReplyJoinGuildResponse::error_code() const {
  return error_code_;
}
inline void ReplyJoinGuildResponse::set_error_code(::google::protobuf::int32 value) {
  set_has_error_code();
  error_code_ = value;
}

// -------------------------------------------------------------------

// DeleteGuildMemberRequest

// required int64 member_guid = 1;
inline bool DeleteGuildMemberRequest::has_member_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteGuildMemberRequest::set_has_member_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteGuildMemberRequest::clear_has_member_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteGuildMemberRequest::clear_member_guid() {
  member_guid_ = GOOGLE_LONGLONG(0);
  clear_has_member_guid();
}
inline ::google::protobuf::int64 DeleteGuildMemberRequest::member_guid() const {
  return member_guid_;
}
inline void DeleteGuildMemberRequest::set_member_guid(::google::protobuf::int64 value) {
  set_has_member_guid();
  member_guid_ = value;
}

// -------------------------------------------------------------------

// DeleteGuildMemberResponse

// required int32 error_code = 1;
inline bool DeleteGuildMemberResponse::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteGuildMemberResponse::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteGuildMemberResponse::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteGuildMemberResponse::clear_error_code() {
  error_code_ = 0;
  clear_has_error_code();
}
inline ::google::protobuf::int32 DeleteGuildMemberResponse::error_code() const {
  return error_code_;
}
inline void DeleteGuildMemberResponse::set_error_code(::google::protobuf::int32 value) {
  set_has_error_code();
  error_code_ = value;
}

// -------------------------------------------------------------------

// DeleteGuildMemberNotify

// required int32 guild_id = 1;
inline bool DeleteGuildMemberNotify::has_guild_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteGuildMemberNotify::set_has_guild_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteGuildMemberNotify::clear_has_guild_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteGuildMemberNotify::clear_guild_id() {
  guild_id_ = 0;
  clear_has_guild_id();
}
inline ::google::protobuf::int32 DeleteGuildMemberNotify::guild_id() const {
  return guild_id_;
}
inline void DeleteGuildMemberNotify::set_guild_id(::google::protobuf::int32 value) {
  set_has_guild_id();
  guild_id_ = value;
}

// -------------------------------------------------------------------

// SetGuildMemberTitleRequest

// required int64 member_guid = 1;
inline bool SetGuildMemberTitleRequest::has_member_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetGuildMemberTitleRequest::set_has_member_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetGuildMemberTitleRequest::clear_has_member_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetGuildMemberTitleRequest::clear_member_guid() {
  member_guid_ = GOOGLE_LONGLONG(0);
  clear_has_member_guid();
}
inline ::google::protobuf::int64 SetGuildMemberTitleRequest::member_guid() const {
  return member_guid_;
}
inline void SetGuildMemberTitleRequest::set_member_guid(::google::protobuf::int64 value) {
  set_has_member_guid();
  member_guid_ = value;
}

// optional int32 member_title = 2;
inline bool SetGuildMemberTitleRequest::has_member_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetGuildMemberTitleRequest::set_has_member_title() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetGuildMemberTitleRequest::clear_has_member_title() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetGuildMemberTitleRequest::clear_member_title() {
  member_title_ = 0;
  clear_has_member_title();
}
inline ::google::protobuf::int32 SetGuildMemberTitleRequest::member_title() const {
  return member_title_;
}
inline void SetGuildMemberTitleRequest::set_member_title(::google::protobuf::int32 value) {
  set_has_member_title();
  member_title_ = value;
}

// -------------------------------------------------------------------

// SetGuildMemberTitleResponse

// required int32 error_code = 1;
inline bool SetGuildMemberTitleResponse::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetGuildMemberTitleResponse::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetGuildMemberTitleResponse::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetGuildMemberTitleResponse::clear_error_code() {
  error_code_ = 0;
  clear_has_error_code();
}
inline ::google::protobuf::int32 SetGuildMemberTitleResponse::error_code() const {
  return error_code_;
}
inline void SetGuildMemberTitleResponse::set_error_code(::google::protobuf::int32 value) {
  set_has_error_code();
  error_code_ = value;
}

// -------------------------------------------------------------------

// SetGuildNoticeRequest

// optional string content = 1;
inline bool SetGuildNoticeRequest::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetGuildNoticeRequest::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetGuildNoticeRequest::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetGuildNoticeRequest::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& SetGuildNoticeRequest::content() const {
  return *content_;
}
inline void SetGuildNoticeRequest::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void SetGuildNoticeRequest::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void SetGuildNoticeRequest::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SetGuildNoticeRequest::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* SetGuildNoticeRequest::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// SetGuildNoticeResponse

// required int32 error_code = 1;
inline bool SetGuildNoticeResponse::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetGuildNoticeResponse::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetGuildNoticeResponse::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetGuildNoticeResponse::clear_error_code() {
  error_code_ = 0;
  clear_has_error_code();
}
inline ::google::protobuf::int32 SetGuildNoticeResponse::error_code() const {
  return error_code_;
}
inline void SetGuildNoticeResponse::set_error_code(::google::protobuf::int32 value) {
  set_has_error_code();
  error_code_ = value;
}

// -------------------------------------------------------------------

// EnterGuildMapRequest

// optional int32 npc_id = 1 [default = 0];
inline bool EnterGuildMapRequest::has_npc_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterGuildMapRequest::set_has_npc_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterGuildMapRequest::clear_has_npc_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterGuildMapRequest::clear_npc_id() {
  npc_id_ = 0;
  clear_has_npc_id();
}
inline ::google::protobuf::int32 EnterGuildMapRequest::npc_id() const {
  return npc_id_;
}
inline void EnterGuildMapRequest::set_npc_id(::google::protobuf::int32 value) {
  set_has_npc_id();
  npc_id_ = value;
}

// -------------------------------------------------------------------

// EnterGuildMapResponse

// required int32 error_code = 1;
inline bool EnterGuildMapResponse::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterGuildMapResponse::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterGuildMapResponse::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterGuildMapResponse::clear_error_code() {
  error_code_ = 0;
  clear_has_error_code();
}
inline ::google::protobuf::int32 EnterGuildMapResponse::error_code() const {
  return error_code_;
}
inline void EnterGuildMapResponse::set_error_code(::google::protobuf::int32 value) {
  set_has_error_code();
  error_code_ = value;
}

// optional int32 map_id = 3 [default = 0];
inline bool EnterGuildMapResponse::has_map_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnterGuildMapResponse::set_has_map_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnterGuildMapResponse::clear_has_map_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnterGuildMapResponse::clear_map_id() {
  map_id_ = 0;
  clear_has_map_id();
}
inline ::google::protobuf::int32 EnterGuildMapResponse::map_id() const {
  return map_id_;
}
inline void EnterGuildMapResponse::set_map_id(::google::protobuf::int32 value) {
  set_has_map_id();
  map_id_ = value;
}

// optional int32 map_x = 4 [default = 0];
inline bool EnterGuildMapResponse::has_map_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EnterGuildMapResponse::set_has_map_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EnterGuildMapResponse::clear_has_map_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EnterGuildMapResponse::clear_map_x() {
  map_x_ = 0;
  clear_has_map_x();
}
inline ::google::protobuf::int32 EnterGuildMapResponse::map_x() const {
  return map_x_;
}
inline void EnterGuildMapResponse::set_map_x(::google::protobuf::int32 value) {
  set_has_map_x();
  map_x_ = value;
}

// optional int32 map_y = 5 [default = 0];
inline bool EnterGuildMapResponse::has_map_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EnterGuildMapResponse::set_has_map_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EnterGuildMapResponse::clear_has_map_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EnterGuildMapResponse::clear_map_y() {
  map_y_ = 0;
  clear_has_map_y();
}
inline ::google::protobuf::int32 EnterGuildMapResponse::map_y() const {
  return map_y_;
}
inline void EnterGuildMapResponse::set_map_y(::google::protobuf::int32 value) {
  set_has_map_y();
  map_y_ = value;
}

// -------------------------------------------------------------------

// LeaveGuildMapRequest

// -------------------------------------------------------------------

// LeaveGuildMapResponse

// required int32 error_code = 1;
inline bool LeaveGuildMapResponse::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LeaveGuildMapResponse::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LeaveGuildMapResponse::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LeaveGuildMapResponse::clear_error_code() {
  error_code_ = 0;
  clear_has_error_code();
}
inline ::google::protobuf::int32 LeaveGuildMapResponse::error_code() const {
  return error_code_;
}
inline void LeaveGuildMapResponse::set_error_code(::google::protobuf::int32 value) {
  set_has_error_code();
  error_code_ = value;
}

// optional int32 map_id = 3 [default = 0];
inline bool LeaveGuildMapResponse::has_map_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LeaveGuildMapResponse::set_has_map_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LeaveGuildMapResponse::clear_has_map_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LeaveGuildMapResponse::clear_map_id() {
  map_id_ = 0;
  clear_has_map_id();
}
inline ::google::protobuf::int32 LeaveGuildMapResponse::map_id() const {
  return map_id_;
}
inline void LeaveGuildMapResponse::set_map_id(::google::protobuf::int32 value) {
  set_has_map_id();
  map_id_ = value;
}

// optional int32 map_x = 4 [default = 0];
inline bool LeaveGuildMapResponse::has_map_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LeaveGuildMapResponse::set_has_map_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LeaveGuildMapResponse::clear_has_map_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LeaveGuildMapResponse::clear_map_x() {
  map_x_ = 0;
  clear_has_map_x();
}
inline ::google::protobuf::int32 LeaveGuildMapResponse::map_x() const {
  return map_x_;
}
inline void LeaveGuildMapResponse::set_map_x(::google::protobuf::int32 value) {
  set_has_map_x();
  map_x_ = value;
}

// optional int32 map_y = 5 [default = 0];
inline bool LeaveGuildMapResponse::has_map_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LeaveGuildMapResponse::set_has_map_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LeaveGuildMapResponse::clear_has_map_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LeaveGuildMapResponse::clear_map_y() {
  map_y_ = 0;
  clear_has_map_y();
}
inline ::google::protobuf::int32 LeaveGuildMapResponse::map_y() const {
  return map_y_;
}
inline void LeaveGuildMapResponse::set_map_y(::google::protobuf::int32 value) {
  set_has_map_y();
  map_y_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace common
}  // namespace protocols

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< protocols::common::GuildMemberStatus>() {
  return protocols::common::GuildMemberStatus_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< protocols::common::GuildMemberTitle>() {
  return protocols::common::GuildMemberTitle_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_game_5fguild_2eproto__INCLUDED
